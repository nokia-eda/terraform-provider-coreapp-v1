{
    "datasources": [
        {
            "name": "app_group",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "preferred_version",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "group_version",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "versions",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "group_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "cluster_role",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the ClusterRole"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "A description for the role."
                                    }
                                },
                                {
                                    "name": "resource_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "api_groups",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permissions for resources specified by the rule."
                                                    }
                                                },
                                                {
                                                    "name": "resources",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to resources."
                                    }
                                },
                                {
                                    "name": "table_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permissions for the given EDB path."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to EDB tables, including via EQL."
                                    }
                                },
                                {
                                    "name": "url_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The permissions for the API server URL for the rule."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to APIServer proxied routes."
                                    }
                                }
                            ],
                            "description": "ClusterRole defines a set of permissions to access EDA resources.\nClusterRoles and users are bound via groups, selecting a set of users and a set of ClusterRoles to bind."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "RoleStatus defines the observed state of Role"
                        }
                    }
                ]
            }
        },
        {
            "name": "cluster_role_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "description",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "A description for the role."
                                                    }
                                                },
                                                {
                                                    "name": "resource_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "api_groups",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permissions for resources specified by the rule."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "resources",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Rules for access to resources."
                                                    }
                                                },
                                                {
                                                    "name": "table_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "path",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permissions for the given EDB path."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Rules for access to EDB tables, including via EQL."
                                                    }
                                                },
                                                {
                                                    "name": "url_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "path",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The permissions for the API server URL for the rule."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Rules for access to APIServer proxied routes."
                                                    }
                                                }
                                            ],
                                            "description": "ClusterRole defines a set of permissions to access EDA resources.\nClusterRoles and users are bound via groups, selecting a set of users and a set of ClusterRoles to bind."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "RoleStatus defines the observed state of Role"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "deviation",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the Deviation"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "accepted",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates whether this Deviation has been accepted."
                                    }
                                },
                                {
                                    "name": "associated_crs",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "group_version",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Group and version of the resource."
                                                    }
                                                },
                                                {
                                                    "name": "kind",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Kind of the resource."
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Name of the resource."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Resources impacted by this Deviation."
                                    }
                                },
                                {
                                    "name": "intended_values",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSON object containing intended values of fields at the specified path."
                                    }
                                },
                                {
                                    "name": "node_endpoint",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Target on which this Deviation is present."
                                    }
                                },
                                {
                                    "name": "operation",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates the operation in this Deviation."
                                    }
                                },
                                {
                                    "name": "path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Path on the target this Deviation is present at. This path is relative to the target's root, without any EDA prefixes - for example \".system\" rather than \".namespace.node.srl.system\"."
                                    }
                                },
                                {
                                    "name": "running_values",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSON object containing running values of fields at the specified path."
                                    }
                                }
                            ],
                            "description": "Deviations are used to represent differences between the intended and actual state of a target.\nThey indicate the intended state - or the computed configuration EDA expects, and compare this to the actual or running state, or the configuration retrieved from the target.\nDeviations are most often generated by out-of-band changes to a target by an external system or user, and\ncan be accepted or rejected. Rejecting a Deviation will result in the intended configuration being re-applied, undoing the out-of-band change.\nDeviations are raised per table, meaning a single change on a target may result in more than one Deviation."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "DeviationStatus defines the observed state of Deviation"
                        }
                    }
                ]
            }
        },
        {
            "name": "deviation_action",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the DeviationAction"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "actions",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "action",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Action to perform on matching Deviations."
                                                    }
                                                },
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Path to match Deviation resources on this target. Only one action is allowed per path."
                                                    }
                                                },
                                                {
                                                    "name": "recurse",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Recursively accept/reject Deviations from the specified path."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The set of actions to perform on the target."
                                    }
                                },
                                {
                                    "name": "node_endpoint",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The target on which this action is to be performed."
                                    }
                                }
                            ],
                            "description": "DeviationAction allows manual and API-driven actions to be performed on Deviation resources.\nThey are the only means to which and end user can accept or reject deviations, as Deviation resources themselves are read only."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "result",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "The result of the set of actions."
                                    }
                                },
                                {
                                    "name": "transaction_id",
                                    "int64": {
                                        "computed_optional_required": "computed",
                                        "description": "The transaction id these actions were part of."
                                    }
                                }
                            ],
                            "description": "DeviationActionStatus defines the observed state of DeviationAction"
                        }
                    }
                ]
            }
        },
        {
            "name": "deviation_action_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "actions",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "action",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Action to perform on matching Deviations."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "path",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Path to match Deviation resources on this target. Only one action is allowed per path."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "recurse",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Recursively accept/reject Deviations from the specified path."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "The set of actions to perform on the target."
                                                    }
                                                },
                                                {
                                                    "name": "node_endpoint",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The target on which this action is to be performed."
                                                    }
                                                }
                                            ],
                                            "description": "DeviationAction allows manual and API-driven actions to be performed on Deviation resources.\nThey are the only means to which and end user can accept or reject deviations, as Deviation resources themselves are read only."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "result",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "The result of the set of actions."
                                                    }
                                                },
                                                {
                                                    "name": "transaction_id",
                                                    "int64": {
                                                        "computed_optional_required": "computed",
                                                        "description": "The transaction id these actions were part of."
                                                    }
                                                }
                                            ],
                                            "description": "DeviationActionStatus defines the observed state of DeviationAction"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "deviation_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "accepted",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates whether this Deviation has been accepted."
                                                    }
                                                },
                                                {
                                                    "name": "associated_crs",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "group_version",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Group and version of the resource."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "kind",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Kind of the resource."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Name of the resource."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Resources impacted by this Deviation."
                                                    }
                                                },
                                                {
                                                    "name": "intended_values",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "JSON object containing intended values of fields at the specified path."
                                                    }
                                                },
                                                {
                                                    "name": "node_endpoint",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Target on which this Deviation is present."
                                                    }
                                                },
                                                {
                                                    "name": "operation",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates the operation in this Deviation."
                                                    }
                                                },
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Path on the target this Deviation is present at. This path is relative to the target's root, without any EDA prefixes - for example \".system\" rather than \".namespace.node.srl.system\"."
                                                    }
                                                },
                                                {
                                                    "name": "running_values",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "JSON object containing running values of fields at the specified path."
                                                    }
                                                }
                                            ],
                                            "description": "Deviations are used to represent differences between the intended and actual state of a target.\nThey indicate the intended state - or the computed configuration EDA expects, and compare this to the actual or running state, or the configuration retrieved from the target.\nDeviations are most often generated by out-of-band changes to a target by an external system or user, and\ncan be accepted or rejected. Rejecting a Deviation will result in the intended configuration being re-applied, undoing the out-of-band change.\nDeviations are raised per table, meaning a single change on a target may result in more than one Deviation."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "DeviationStatus defines the observed state of Deviation"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "edge_interface",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the EdgeInterface"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "bridge_domain",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a Bridge Domain"
                                    }
                                },
                                {
                                    "name": "encap_type",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates if the EdgeInterface uses VLAN tagging"
                                    }
                                },
                                {
                                    "name": "gateway_ipv4addresses",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "ip_prefix",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Address and mask to use"
                                                    }
                                                },
                                                {
                                                    "name": "primary",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates which address to use as primary for broadcast"
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of gateway IPv4 addresses in ip/mask form - e.g. 192.168.0.1/24"
                                    }
                                },
                                {
                                    "name": "gateway_ipv6addresses",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "ip_prefix",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Address and mask to use"
                                                    }
                                                },
                                                {
                                                    "name": "primary",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates which address to use as primary for broadcast"
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of gateway IPv6 addresses in ip/mask form - e.g. fc00::1/120"
                                    }
                                },
                                {
                                    "name": "interface_resource",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to an interface"
                                    }
                                },
                                {
                                    "name": "router",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a Router"
                                    }
                                },
                                {
                                    "name": "vlan_id",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "Single value between 0-4094 supported"
                                    }
                                }
                            ],
                            "description": "EdgeInterfaceSpec defines the desired state of EdgeInterface"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "EdgeInterfaceStatus defines the observed state of EdgeInterface"
                        }
                    }
                ]
            }
        },
        {
            "name": "edge_interface_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "bridge_domain",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to a Bridge Domain"
                                                    }
                                                },
                                                {
                                                    "name": "encap_type",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates if the EdgeInterface uses VLAN tagging"
                                                    }
                                                },
                                                {
                                                    "name": "gateway_ipv4addresses",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "ip_prefix",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Address and mask to use"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "primary",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Indicates which address to use as primary for broadcast"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of gateway IPv4 addresses in ip/mask form - e.g. 192.168.0.1/24"
                                                    }
                                                },
                                                {
                                                    "name": "gateway_ipv6addresses",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "ip_prefix",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Address and mask to use"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "primary",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Indicates which address to use as primary for broadcast"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of gateway IPv6 addresses in ip/mask form - e.g. fc00::1/120"
                                                    }
                                                },
                                                {
                                                    "name": "interface_resource",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to an interface"
                                                    }
                                                },
                                                {
                                                    "name": "router",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to a Router"
                                                    }
                                                },
                                                {
                                                    "name": "vlan_id",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Single value between 0-4094 supported"
                                                    }
                                                }
                                            ],
                                            "description": "EdgeInterfaceSpec defines the desired state of EdgeInterface"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "EdgeInterfaceStatus defines the observed state of EdgeInterface"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "http_proxy",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the HttpProxy"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "auth_type",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Determines where authentication happens.\nIf \"atDestination\", then no authentication happens in API server and any auth tokens are forwarded as is.\nIf \"inApiServer\", then authentication happens within the API server and auth tokens are stripped prior to forwarding."
                                    }
                                },
                                {
                                    "name": "root_url",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The proxy destination, including the protocol."
                                    }
                                }
                            ],
                            "description": "HttpProxySpec defines the desired state of HttpProxy"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "HttpProxyStatus defines the observed state of HttpProxy"
                        }
                    }
                ]
            }
        },
        {
            "name": "http_proxy_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "auth_type",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Determines where authentication happens.\nIf \"atDestination\", then no authentication happens in API server and any auth tokens are forwarded as is.\nIf \"inApiServer\", then authentication happens within the API server and auth tokens are stripped prior to forwarding."
                                                    }
                                                },
                                                {
                                                    "name": "root_url",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The proxy destination, including the protocol."
                                                    }
                                                }
                                            ],
                                            "description": "HttpProxySpec defines the desired state of HttpProxy"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "HttpProxyStatus defines the observed state of HttpProxy"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "index_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the IndexAllocationPool"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Index to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Range of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "size",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Number of elements in the segment."
                                                    }
                                                },
                                                {
                                                    "name": "start",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Starting value of the segment."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing indexes to allocate."
                                    }
                                }
                            ],
                            "description": "IndexAllocationPool is a generic allocation pool supporting allocation of indexes from a set of segments.\nIt supports allocating things like VLANs, subinterface indexes, autonomous system numbers, or any other integer-based index."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "IndexAllocationPoolStatus defines the observed state of IndexAllocationPool"
                        }
                    }
                ]
            }
        },
        {
            "name": "index_allocation_pool_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "publish_allocations",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                                    }
                                                },
                                                {
                                                    "name": "segments",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "allocations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "name",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Name of this allocation."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "value",
                                                                                    "int64": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Index to reserve."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "reservations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "end",
                                                                                    "int64": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to reserve to."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "start",
                                                                                    "int64": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to start reserving."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "Range of reservations to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "size",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Number of elements in the segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Starting value of the segment."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of segments containing indexes to allocate."
                                                    }
                                                }
                                            ],
                                            "description": "IndexAllocationPool is a generic allocation pool supporting allocation of indexes from a set of segments.\nIt supports allocating things like VLANs, subinterface indexes, autonomous system numbers, or any other integer-based index."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "IndexAllocationPoolStatus defines the observed state of IndexAllocationPool"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the IPAllocationPool"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocate_broadcast_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the broadcast address."
                                                    }
                                                },
                                                {
                                                    "name": "allocate_network_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the network address."
                                                    }
                                                },
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate."
                                    }
                                }
                            ],
                            "description": "IPAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPInSubnetAllocationPool in that it returns a single unzoned IP address, i.e. an IP address without a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "IPAllocationPoolStatus defines the observed state of IPAllocationPool"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_allocation_pool_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "publish_allocations",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                                    }
                                                },
                                                {
                                                    "name": "segments",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "allocate_broadcast_address",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permit the allocation of the broadcast address."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "allocate_network_address",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permit the allocation of the network address."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "allocations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "name",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Name of this allocation."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "value",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Allocation to reserve."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "reservations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "end",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to reserve to."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "start",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to start reserving."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "subnet",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate."
                                                    }
                                                }
                                            ],
                                            "description": "IPAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPInSubnetAllocationPool in that it returns a single unzoned IP address, i.e. an IP address without a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1.\nConsult application documentation to know which pool type to use for a given use case."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "IPAllocationPoolStatus defines the observed state of IPAllocationPool"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_in_subnet_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the IPInSubnetAllocationPool"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocate_broadcast_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the broadcast address."
                                                    }
                                                },
                                                {
                                                    "name": "allocate_network_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the network address."
                                                    }
                                                },
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate."
                                    }
                                }
                            ],
                            "description": "IPInSubnetAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPAllocationPool in that it returns a single zoned IP address, i.e. an IP address with a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1/24.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "IPInSubnetAllocationPoolStatus defines the observed state of IPInSubnetAllocationPool"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_in_subnet_allocation_pool_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "publish_allocations",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                                    }
                                                },
                                                {
                                                    "name": "segments",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "allocate_broadcast_address",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permit the allocation of the broadcast address."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "allocate_network_address",
                                                                    "bool": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permit the allocation of the network address."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "allocations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "name",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Name of this allocation."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "value",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Allocation to reserve."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "reservations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "end",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to reserve to."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "start",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to start reserving."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "subnet",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate."
                                                    }
                                                }
                                            ],
                                            "description": "IPInSubnetAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPAllocationPool in that it returns a single zoned IP address, i.e. an IP address with a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1/24.\nConsult application documentation to know which pool type to use for a given use case."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "IPInSubnetAllocationPoolStatus defines the observed state of IPInSubnetAllocationPool"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "license",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the License"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "data",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The license key. This is a base64 encoded string."
                                    }
                                },
                                {
                                    "name": "enabled",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates if this license is available for use."
                                    }
                                }
                            ],
                            "description": "A License represents an application license providing functionality within EDA. A license providing the \"base\" feature must be provided/valid for transactions to be processed."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "comment",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Any comment provided in the license."
                                    }
                                },
                                {
                                    "name": "expiration_date",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Date and time the license expires."
                                    }
                                },
                                {
                                    "name": "expired",
                                    "bool": {
                                        "computed_optional_required": "computed",
                                        "description": "Indicates if the license has expired."
                                    }
                                },
                                {
                                    "name": "issued_date",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Date and time the license was issued."
                                    }
                                },
                                {
                                    "name": "used",
                                    "bool": {
                                        "computed_optional_required": "computed",
                                        "description": "Indicates if license has been used."
                                    }
                                },
                                {
                                    "name": "valid",
                                    "bool": {
                                        "computed_optional_required": "computed",
                                        "description": "Indicates if the license is valid."
                                    }
                                }
                            ],
                            "description": "Status information for this license."
                        }
                    }
                ]
            }
        },
        {
            "name": "license_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "data",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The license key. This is a base64 encoded string."
                                                    }
                                                },
                                                {
                                                    "name": "enabled",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates if this license is available for use."
                                                    }
                                                }
                                            ],
                                            "description": "A License represents an application license providing functionality within EDA. A license providing the \"base\" feature must be provided/valid for transactions to be processed."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "comment",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Any comment provided in the license."
                                                    }
                                                },
                                                {
                                                    "name": "expiration_date",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Date and time the license expires."
                                                    }
                                                },
                                                {
                                                    "name": "expired",
                                                    "bool": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Indicates if the license has expired."
                                                    }
                                                },
                                                {
                                                    "name": "issued_date",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Date and time the license was issued."
                                                    }
                                                },
                                                {
                                                    "name": "used",
                                                    "bool": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Indicates if license has been used."
                                                    }
                                                },
                                                {
                                                    "name": "valid",
                                                    "bool": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Indicates if the license is valid."
                                                    }
                                                }
                                            ],
                                            "description": "Status information for this license."
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "namespace",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the Namespace"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "An optional description of the use of the namespace."
                                    }
                                }
                            ],
                            "description": "A Namespace is a logical partition within the cluster that provides a mechanism for isolating resources.\nNamespaces allow for resource segmentation, enabling multiple teams or applications to share the same cluster without conflict."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "NamespaceStatus defines the observed state of Namespace"
                        }
                    }
                ]
            }
        },
        {
            "name": "namespace_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "description",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "An optional description of the use of the namespace."
                                                    }
                                                }
                                            ],
                                            "description": "A Namespace is a logical partition within the cluster that provides a mechanism for isolating resources.\nNamespaces allow for resource segmentation, enabling multiple teams or applications to share the same cluster without conflict."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "NamespaceStatus defines the observed state of Namespace"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "node_profile",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the NodeProfile"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "annotate",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates if NPP should annotate sent configuration."
                                    }
                                },
                                {
                                    "name": "container_image",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Container image to use when simulating TopoNodes referencing this NodeProfile, e.g. ghcr.io/nokia/srlinux:24.7.1."
                                    }
                                },
                                {
                                    "name": "dhcp",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "dhcp4options",
                                                "list_nested": {
                                                    "computed_optional_required": "optional",
                                                    "nested_object": {
                                                        "attributes": [
                                                            {
                                                                "name": "option",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "DHCPv4 option to return to the TopoNode."
                                                                }
                                                            },
                                                            {
                                                                "name": "value",
                                                                "list": {
                                                                    "computed_optional_required": "optional",
                                                                    "element_type": {
                                                                        "string": {}
                                                                    },
                                                                    "description": "Value to return to the TopoNode for the specified option."
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "description": "DHCPv4 options to return to TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "dhcp6options",
                                                "list_nested": {
                                                    "computed_optional_required": "optional",
                                                    "nested_object": {
                                                        "attributes": [
                                                            {
                                                                "name": "option",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "DHCPv6 option to return to the TopoNode."
                                                                }
                                                            },
                                                            {
                                                                "name": "value",
                                                                "list": {
                                                                    "computed_optional_required": "optional",
                                                                    "element_type": {
                                                                        "string": {}
                                                                    },
                                                                    "description": "Value to return to the TopoNode for the specified option."
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "description": "DHCPv6 options to return to TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "management_poolv4",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "IPInSubnetAllocationPool to use for IPv4 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "management_poolv6",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "IPInSubnetAllocationPool to use for IPv6 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "preferred_address_family",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "Preferred IP address family"
                                                }
                                            }
                                        ],
                                        "description": "DHCP options to use when onboarding the TopoNode. Optional if not bootstrapping using EDA."
                                    }
                                },
                                {
                                    "name": "image_pull_secret",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Secret used to authenticate to the container registry where the container image is hosted."
                                    }
                                },
                                {
                                    "name": "images",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "image",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "URL hosting the software image, e.g. srlimages/srlinux-24.7.1.bin."
                                                    }
                                                },
                                                {
                                                    "name": "image_md5",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "URL hosting the software image md5 hash. e.g. srlimages/srlinux-24.7.1.bin.md5."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "URLs hosting software images for bootstrapping TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "license",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "ConfigMap containing a license for TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "llm_db",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "URL containing LLDB  to use when interacting with LLM-DB and OpenAI for query autocompletion, e.g. http://eda-asvr/llmdb/ce-llm-db-srlinux-24.7.1.tar.gz."
                                    }
                                },
                                {
                                    "name": "node_user",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a NodeUser to use for authentication to TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "onboarding_password",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The password to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin.",
                                        "sensitive": true
                                    }
                                },
                                {
                                    "name": "onboarding_username",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The username to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Sets the operating system of this NodeProfile, e.g. srl."
                                    }
                                },
                                {
                                    "name": "platform_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.type."
                                    }
                                },
                                {
                                    "name": "port",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "Port used to establish a connection to the TopoNode, e.g. 57400."
                                    }
                                },
                                {
                                    "name": "serial_number_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the serial number string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.serial-number."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Sets the software version of this NodeProfile, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                },
                                {
                                    "name": "version_match",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Regular expression to match the node-retrieved version string to TopoNode version, e.g. v0\\.0\\.0.*."
                                    }
                                },
                                {
                                    "name": "version_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .system.information.version."
                                    }
                                },
                                {
                                    "name": "yang",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "URL containing YANG modules and schema profile to use when interacting with TopoNodes referencing this NodeProfile, e.g. http://eda-asvr/schemaprofiles/srlinux-24.7.1.zip."
                                    }
                                }
                            ],
                            "description": "NodeProfileSpec defines the desired state of NodeProfile"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "node_profile_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "annotate",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates if NPP should annotate sent configuration."
                                                    }
                                                },
                                                {
                                                    "name": "container_image",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Container image to use when simulating TopoNodes referencing this NodeProfile, e.g. ghcr.io/nokia/srlinux:24.7.1."
                                                    }
                                                },
                                                {
                                                    "name": "dhcp",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "dhcp4options",
                                                                "list_nested": {
                                                                    "computed_optional_required": "optional",
                                                                    "nested_object": {
                                                                        "attributes": [
                                                                            {
                                                                                "name": "option",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "DHCPv4 option to return to the TopoNode."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "value",
                                                                                "list": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "element_type": {
                                                                                        "string": {}
                                                                                    },
                                                                                    "description": "Value to return to the TopoNode for the specified option."
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "description": "DHCPv4 options to return to TopoNodes referencing this NodeProfile."
                                                                }
                                                            },
                                                            {
                                                                "name": "dhcp6options",
                                                                "list_nested": {
                                                                    "computed_optional_required": "optional",
                                                                    "nested_object": {
                                                                        "attributes": [
                                                                            {
                                                                                "name": "option",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "DHCPv6 option to return to the TopoNode."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "value",
                                                                                "list": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "element_type": {
                                                                                        "string": {}
                                                                                    },
                                                                                    "description": "Value to return to the TopoNode for the specified option."
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "description": "DHCPv6 options to return to TopoNodes referencing this NodeProfile."
                                                                }
                                                            },
                                                            {
                                                                "name": "management_poolv4",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "IPInSubnetAllocationPool to use for IPv4 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                                }
                                                            },
                                                            {
                                                                "name": "management_poolv6",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "IPInSubnetAllocationPool to use for IPv6 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                                }
                                                            },
                                                            {
                                                                "name": "preferred_address_family",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Preferred IP address family"
                                                                }
                                                            }
                                                        ],
                                                        "description": "DHCP options to use when onboarding the TopoNode. Optional if not bootstrapping using EDA."
                                                    }
                                                },
                                                {
                                                    "name": "image_pull_secret",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Secret used to authenticate to the container registry where the container image is hosted."
                                                    }
                                                },
                                                {
                                                    "name": "images",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "image",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "URL hosting the software image, e.g. srlimages/srlinux-24.7.1.bin."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "image_md5",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "URL hosting the software image md5 hash. e.g. srlimages/srlinux-24.7.1.bin.md5."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "URLs hosting software images for bootstrapping TopoNodes referencing this NodeProfile."
                                                    }
                                                },
                                                {
                                                    "name": "license",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "ConfigMap containing a license for TopoNodes referencing this NodeProfile."
                                                    }
                                                },
                                                {
                                                    "name": "llm_db",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "URL containing LLDB  to use when interacting with LLM-DB and OpenAI for query autocompletion, e.g. http://eda-asvr/llmdb/ce-llm-db-srlinux-24.7.1.tar.gz."
                                                    }
                                                },
                                                {
                                                    "name": "node_user",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to a NodeUser to use for authentication to TopoNodes referencing this NodeProfile."
                                                    }
                                                },
                                                {
                                                    "name": "onboarding_password",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The password to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin.",
                                                        "sensitive": true
                                                    }
                                                },
                                                {
                                                    "name": "onboarding_username",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The username to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin."
                                                    }
                                                },
                                                {
                                                    "name": "operating_system",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Sets the operating system of this NodeProfile, e.g. srl."
                                                    }
                                                },
                                                {
                                                    "name": "platform_path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.type."
                                                    }
                                                },
                                                {
                                                    "name": "port",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Port used to establish a connection to the TopoNode, e.g. 57400."
                                                    }
                                                },
                                                {
                                                    "name": "serial_number_path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "JSPath to use for retrieving the serial number string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.serial-number."
                                                    }
                                                },
                                                {
                                                    "name": "version",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Sets the software version of this NodeProfile, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                                    }
                                                },
                                                {
                                                    "name": "version_match",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Regular expression to match the node-retrieved version string to TopoNode version, e.g. v0\\.0\\.0.*."
                                                    }
                                                },
                                                {
                                                    "name": "version_path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .system.information.version."
                                                    }
                                                },
                                                {
                                                    "name": "yang",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "URL containing YANG modules and schema profile to use when interacting with TopoNodes referencing this NodeProfile, e.g. http://eda-asvr/schemaprofiles/srlinux-24.7.1.zip."
                                                    }
                                                }
                                            ],
                                            "description": "NodeProfileSpec defines the desired state of NodeProfile"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "node_user",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the NodeUser"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "group_bindings",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "groups",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Assigned groups for this user."
                                                    }
                                                },
                                                {
                                                    "name": "node_selector",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Selector to use when selecting TopoNodes to deploy this user to."
                                                    }
                                                },
                                                {
                                                    "name": "nodes",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": " TopoNodes to deploy this user to."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Matching of this user to node-specific permissions via groups."
                                    }
                                },
                                {
                                    "name": "password",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Password for this user.",
                                        "sensitive": true
                                    }
                                },
                                {
                                    "name": "ssh_public_keys",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "SSH public keys to deploy for the user."
                                    }
                                },
                                {
                                    "name": "username",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Name of this user. If not provided, the name of the resource will be used."
                                    }
                                }
                            ],
                            "description": "The NodeUser resource represents a user that can be deployed to a set of TopoNodes. It supports managing the user's password, SSH keys, and group bindings.\nAdditionally a NodeUser is referenced by a NodeProfile to indicate how NPP should connect to TopoNodes."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "group_bindings_1",
                                    "list_nested": {
                                        "computed_optional_required": "computed",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "groups",
                                                    "list": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Groups this user is a member of on this node."
                                                    }
                                                },
                                                {
                                                    "name": "node",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Node this user is deployed to."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of TopoNodes user has been deployed to, along with corresponding groups."
                                    }
                                }
                            ],
                            "description": "Deployment status of this NodeUser."
                        }
                    }
                ]
            }
        },
        {
            "name": "node_user_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "group_bindings",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "groups",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "Assigned groups for this user."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "node_selector",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "Selector to use when selecting TopoNodes to deploy this user to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "nodes",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": " TopoNodes to deploy this user to."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Matching of this user to node-specific permissions via groups."
                                                    }
                                                },
                                                {
                                                    "name": "password",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Password for this user.",
                                                        "sensitive": true
                                                    }
                                                },
                                                {
                                                    "name": "ssh_public_keys",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "SSH public keys to deploy for the user."
                                                    }
                                                },
                                                {
                                                    "name": "username",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Name of this user. If not provided, the name of the resource will be used."
                                                    }
                                                }
                                            ],
                                            "description": "The NodeUser resource represents a user that can be deployed to a set of TopoNodes. It supports managing the user's password, SSH keys, and group bindings.\nAdditionally a NodeUser is referenced by a NodeProfile to indicate how NPP should connect to TopoNodes."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "group_bindings_1",
                                                    "list_nested": {
                                                        "computed_optional_required": "computed",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "groups",
                                                                    "list": {
                                                                        "computed_optional_required": "computed",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "Groups this user is a member of on this node."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "node",
                                                                    "string": {
                                                                        "computed_optional_required": "computed",
                                                                        "description": "Node this user is deployed to."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of TopoNodes user has been deployed to, along with corresponding groups."
                                                    }
                                                }
                                            ],
                                            "description": "Deployment status of this NodeUser."
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "resource_list",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "group_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "resources",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "name",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "namespaced",
                                        "bool": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "read_only",
                                        "bool": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "singular_name",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "ui_category",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "role",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the Role"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "A description for the role."
                                    }
                                },
                                {
                                    "name": "resource_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "api_groups",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permissions for resources specified by the rule."
                                                    }
                                                },
                                                {
                                                    "name": "resources",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to kubernetes resources"
                                    }
                                },
                                {
                                    "name": "table_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permissions for the given EDB path."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to the database tables."
                                    }
                                },
                                {
                                    "name": "url_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches."
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The permissions for the API server URL for the rule."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to api-server proxied routes."
                                    }
                                }
                            ],
                            "description": "RoleSpec defines the desired state of Role"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "RoleStatus defines the observed state of Role"
                        }
                    }
                ]
            }
        },
        {
            "name": "role_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "description",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "A description for the role."
                                                    }
                                                },
                                                {
                                                    "name": "resource_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "api_groups",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permissions for resources specified by the rule."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "resources",
                                                                    "list": {
                                                                        "computed_optional_required": "optional",
                                                                        "element_type": {
                                                                            "string": {}
                                                                        },
                                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "The rules for access to kubernetes resources"
                                                    }
                                                },
                                                {
                                                    "name": "table_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "path",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Permissions for the given EDB path."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "The rules for access to the database tables."
                                                    }
                                                },
                                                {
                                                    "name": "url_rules",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "path",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "permissions",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The permissions for the API server URL for the rule."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "The rules for access to api-server proxied routes."
                                                    }
                                                }
                                            ],
                                            "description": "RoleSpec defines the desired state of Role"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "RoleStatus defines the observed state of Role"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "subnet_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the SubnetAllocationPool"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "IPv4 or IPv6 subnet to allocate subnets from, e.g. 10.1.0.0/16."
                                                    }
                                                },
                                                {
                                                    "name": "subnet_length",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The size of the subnets to be allocated from within the parent subnet, e.g. 29 (which could allocate 10.1.0.8/29, for example)."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing subnets to allocate."
                                    }
                                }
                            ],
                            "description": "SubnetAllocationPool is a generic subnet allocation pool supporting allocation of IPv4 and/or IPv6 child subnets from a list of parent subnet segments.\nIt allocates a subnet of the configured length from the provided parent subnet.\nFor example a pool could return 10.1.0.8/29 when a segment is defined as subnet 10.1.0.0/16 with subnet length 29.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "SubnetAllocationPoolStatus defines the observed state of SubnetAllocationPool"
                        }
                    }
                ]
            }
        },
        {
            "name": "subnet_allocation_pool_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "publish_allocations",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                                    }
                                                },
                                                {
                                                    "name": "segments",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "allocations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "name",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Name of this allocation."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "value",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Allocation to reserve."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "reservations",
                                                                    "list_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "nested_object": {
                                                                            "attributes": [
                                                                                {
                                                                                    "name": "end",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to reserve to."
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "start",
                                                                                    "string": {
                                                                                        "computed_optional_required": "optional",
                                                                                        "description": "Value to start reserving."
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "subnet",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "IPv4 or IPv6 subnet to allocate subnets from, e.g. 10.1.0.0/16."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "subnet_length",
                                                                    "int64": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The size of the subnets to be allocated from within the parent subnet, e.g. 29 (which could allocate 10.1.0.8/29, for example)."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of segments containing subnets to allocate."
                                                    }
                                                }
                                            ],
                                            "description": "SubnetAllocationPool is a generic subnet allocation pool supporting allocation of IPv4 and/or IPv6 child subnets from a list of parent subnet segments.\nIt allocates a subnet of the configured length from the provided parent subnet.\nFor example a pool could return 10.1.0.8/29 when a segment is defined as subnet 10.1.0.0/16 with subnet length 29.\nConsult application documentation to know which pool type to use for a given use case."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "SubnetAllocationPoolStatus defines the observed state of SubnetAllocationPool"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_breakout",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the TopoBreakout"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "channels",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "The number of breakout channels to create"
                                    }
                                },
                                {
                                    "name": "interface",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "A list of normalized parent interface/port"
                                    }
                                },
                                {
                                    "name": "node",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "Reference to a list of TopoNodes where the parent interfaces are to be broken out"
                                    }
                                },
                                {
                                    "name": "speed",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The speed of each breakout channel"
                                    }
                                }
                            ],
                            "description": "TopoBreakoutSpec defines the desired state of TopoBreakout"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "TopoBreakoutStatus defines the observed state of TopoBreakout"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_breakout_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "channels",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The number of breakout channels to create"
                                                    }
                                                },
                                                {
                                                    "name": "interface",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "A list of normalized parent interface/port"
                                                    }
                                                },
                                                {
                                                    "name": "node",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Reference to a list of TopoNodes where the parent interfaces are to be broken out"
                                                    }
                                                },
                                                {
                                                    "name": "speed",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The speed of each breakout channel"
                                                    }
                                                }
                                            ],
                                            "description": "TopoBreakoutSpec defines the desired state of TopoBreakout"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "TopoBreakoutStatus defines the observed state of TopoBreakout"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_link",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the TopoLink"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "links",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "local",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "interface",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                }
                                                            },
                                                            {
                                                                "name": "interface_resource",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Reference to a Interface."
                                                                }
                                                            },
                                                            {
                                                                "name": "node",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Reference to a TopoNode."
                                                                }
                                                            }
                                                        ],
                                                        "description": "Local, or \"A\" endpoint of the link."
                                                    }
                                                },
                                                {
                                                    "name": "remote",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "interface",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                }
                                                            },
                                                            {
                                                                "name": "interface_resource",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Reference to a Interface."
                                                                }
                                                            },
                                                            {
                                                                "name": "node",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Reference to a TopoNode."
                                                                }
                                                            }
                                                        ],
                                                        "description": "Remote, or \"B\" endpoint of the link."
                                                    }
                                                },
                                                {
                                                    "name": "speed",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Speed of the link."
                                                    }
                                                },
                                                {
                                                    "name": "type",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Specify the type of link.\nIf type is set to edge, topology information for the remote device can be set; when doing so the Remote Node can be set as the hostname of the remote device and Remote Interface as the remote interface name in the device specific format, e.g. eth0."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Define the set of physical links making up this TopoLink."
                                    }
                                }
                            ],
                            "description": "TopoLink represents a logical link between two TopoNodes. It may include more than one physical link, being used to represent a LAG or multihomed link.\nTo create a point to point link with a single interface on both sides use a single link property.\nTo create a point to point link with a LAG configured on both side, use two links with matching nodes.\nA multihomed LAG is created by using two or more links where the A side and/or B side can be different.\nCreating a link with only A specified will create an edge interface."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "members",
                                    "list_nested": {
                                        "computed_optional_required": "computed",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "interface",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Reference to an Interface"
                                                    }
                                                },
                                                {
                                                    "name": "node",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Reference to a TopoNode"
                                                    }
                                                },
                                                {
                                                    "name": "operational_state",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Indicates the operational state of the TopoLink member."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of members present on the TopoLink."
                                    }
                                },
                                {
                                    "name": "operational_state",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Indicates the aggregate operational state of the TopoLink."
                                    }
                                }
                            ],
                            "description": "TopoLinkStatus defines the observed state of TopoLink"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_link_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "links",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "local",
                                                                    "single_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "attributes": [
                                                                            {
                                                                                "name": "interface",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "interface_resource",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Reference to a Interface."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "node",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Reference to a TopoNode."
                                                                                }
                                                                            }
                                                                        ],
                                                                        "description": "Local, or \"A\" endpoint of the link."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "remote",
                                                                    "single_nested": {
                                                                        "computed_optional_required": "optional",
                                                                        "attributes": [
                                                                            {
                                                                                "name": "interface",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "interface_resource",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Reference to a Interface."
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "node",
                                                                                "string": {
                                                                                    "computed_optional_required": "optional",
                                                                                    "description": "Reference to a TopoNode."
                                                                                }
                                                                            }
                                                                        ],
                                                                        "description": "Remote, or \"B\" endpoint of the link."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "speed",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Speed of the link."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "type",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Specify the type of link.\nIf type is set to edge, topology information for the remote device can be set; when doing so the Remote Node can be set as the hostname of the remote device and Remote Interface as the remote interface name in the device specific format, e.g. eth0."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Define the set of physical links making up this TopoLink."
                                                    }
                                                }
                                            ],
                                            "description": "TopoLink represents a logical link between two TopoNodes. It may include more than one physical link, being used to represent a LAG or multihomed link.\nTo create a point to point link with a single interface on both sides use a single link property.\nTo create a point to point link with a LAG configured on both side, use two links with matching nodes.\nA multihomed LAG is created by using two or more links where the A side and/or B side can be different.\nCreating a link with only A specified will create an edge interface."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "members",
                                                    "list_nested": {
                                                        "computed_optional_required": "computed",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "interface",
                                                                    "string": {
                                                                        "computed_optional_required": "computed",
                                                                        "description": "Reference to an Interface"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "node",
                                                                    "string": {
                                                                        "computed_optional_required": "computed",
                                                                        "description": "Reference to a TopoNode"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "operational_state",
                                                                    "string": {
                                                                        "computed_optional_required": "computed",
                                                                        "description": "Indicates the operational state of the TopoLink member."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of members present on the TopoLink."
                                                    }
                                                },
                                                {
                                                    "name": "operational_state",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Indicates the aggregate operational state of the TopoLink."
                                                    }
                                                }
                                            ],
                                            "description": "TopoLinkStatus defines the observed state of TopoLink"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_node",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the TopoNode"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "component",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "kind",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The kind of Component, e.g. lineCard."
                                                    }
                                                },
                                                {
                                                    "name": "slot",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The slot this Component resides in, unset for Components that do not have a slot or ID.\ne.g. 1 would denote the linecard slot 1, 1/1 would denote linecard slot 1 mda slot 1."
                                                    }
                                                },
                                                {
                                                    "name": "type",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Denotes the type of hardware being provisioned, e.g. xcm-x20."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of components within the TopoNode.\nUsed to define the type and location of linecards, fabrics (SFM), media adapter cards (MDA) and control cards (CPM)."
                                    }
                                },
                                {
                                    "name": "license",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a ConfigMap containing a license for the TopoNode. Overrides the license set in the referenced NodeProfile, if present."
                                    }
                                },
                                {
                                    "name": "mac_address",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "MAC address to associate with this TopoNode.\nTypically the chassis MAC address, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                    }
                                },
                                {
                                    "name": "node_profile",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a NodeProfile to use with this TopoNode."
                                    }
                                },
                                {
                                    "name": "npp",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "mode",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "The mode in which this TopoNode is functioning.\n\"normal\" (the default)\n   indicates that NPP is expecting an endpoint to exist, and will accept and confirm changes only if the endpoint\n   accepts them.\n\"maintenance\"\n   indicates that no changes will be accepted for the TopoNode, irrespective if the endpoint is up and reachable.\n   The exception is if an upgrade is occuring, in which case changes will be accepted.\n\"null\"\n\t  indicates that changes will be accepted from CRs and no NPP will be spun up. NPP validation will not occur.\n   This may be useful in playground mode to avoid spinning up of 1000s of NPPs.\n\"emulate\"\n   indicates that changes will be accepted at the NPP level, without pushing them to a endpoint. NPP validation\n   still occurs.  If no IP address is present, we also run in emulate mode."
                                                }
                                            }
                                        ],
                                        "description": "Options relating to NPP interactions with the node."
                                    }
                                },
                                {
                                    "name": "on_boarded",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "Indicates if this TopoNode has been bootstrapped or is reachable via configured credentials. Set by BootstrapServer when it completes onboarding functions for a given TopoNode.\nMost applications ignore TopoNodes that have not been onboarded yet."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Operating system running on this TopoNode, e.g. srl."
                                    }
                                },
                                {
                                    "name": "platform",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                    }
                                },
                                {
                                    "name": "production_address",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "ipv4",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "The IPv4 production address"
                                                }
                                            },
                                            {
                                                "name": "ipv6",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "The IPv6 production address"
                                                }
                                            }
                                        ],
                                        "description": "Production address of this TopoNode - this is the address the real, production instance of this TopoNode uses.\nIf left blank, an address will be allocated from the management IP pool specified in the referenced NodeProfile.\nIf this TopoNode is not bootstrapped by EDA this field must be provided."
                                    }
                                },
                                {
                                    "name": "serial_number",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Serial number of this TopoNode, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                    }
                                },
                                {
                                    "name": "system_interface",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Deprecated: Name of the Interface resource representing the primary loopback on the TopoNode, this field will be removed in the future version."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Sets the software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                }
                            ],
                            "description": "A managed network element is represented via a TopoNode resource, describing characteristics of a specific element in the topology."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "nodedetails",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Address and port used to connected to the node."
                                    }
                                },
                                {
                                    "name": "nodestate",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "The current state of the connection between NPP and the node.\n\"TryingToConnect\"\n   NPP is attempting to connect and establish connectivity to the node\n\"WaitingForInitialCfg\"\n   NPP is connected to the node but waiting for intial config to push\n\"Committing\"\n\t  NPP is in progress of commiting\n\"RetryingCommit\"\n   NPP lost sync to node and is re-pushing current config\n\"Synced\"\n   NPP is in fully synced state\n\"Standby\"\n   NPP is running in standby mode. This state is only used on standby clusters with georedundancy.\n\"NoIpAddress\"\n   NPP is running but there is no IP address for node. This only happen in sim setups when\n   CX has not created the simulated node, or the simulated pod failed to launch due to image error."
                                    }
                                },
                                {
                                    "name": "nppdetails",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "NPP address and port for this TopoNode."
                                    }
                                },
                                {
                                    "name": "npppod",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "NPP pod name"
                                    }
                                },
                                {
                                    "name": "nppstate",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "The current state of the connection between ConfigEngine and NPP."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Operational operating system running on this TopoNode, e.g. srl, sros."
                                    }
                                },
                                {
                                    "name": "platform",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Operational platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                    }
                                },
                                {
                                    "name": "simulate",
                                    "bool": {
                                        "computed_optional_required": "computed",
                                        "description": "Simulate using CX - if true CX is reponsible for generating the TargetNode resource."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "computed",
                                        "description": "Operational software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                }
                            ],
                            "description": "TopoNodeStatus defines the observed state of TopoNode"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_node_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "component",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "kind",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The kind of Component, e.g. lineCard."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "slot",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "The slot this Component resides in, unset for Components that do not have a slot or ID.\ne.g. 1 would denote the linecard slot 1, 1/1 would denote linecard slot 1 mda slot 1."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "type",
                                                                    "string": {
                                                                        "computed_optional_required": "optional",
                                                                        "description": "Denotes the type of hardware being provisioned, e.g. xcm-x20."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of components within the TopoNode.\nUsed to define the type and location of linecards, fabrics (SFM), media adapter cards (MDA) and control cards (CPM)."
                                                    }
                                                },
                                                {
                                                    "name": "license",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to a ConfigMap containing a license for the TopoNode. Overrides the license set in the referenced NodeProfile, if present."
                                                    }
                                                },
                                                {
                                                    "name": "mac_address",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "MAC address to associate with this TopoNode.\nTypically the chassis MAC address, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                                    }
                                                },
                                                {
                                                    "name": "node_profile",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Reference to a NodeProfile to use with this TopoNode."
                                                    }
                                                },
                                                {
                                                    "name": "npp",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "mode",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "The mode in which this TopoNode is functioning.\n\"normal\" (the default)\n   indicates that NPP is expecting an endpoint to exist, and will accept and confirm changes only if the endpoint\n   accepts them.\n\"maintenance\"\n   indicates that no changes will be accepted for the TopoNode, irrespective if the endpoint is up and reachable.\n   The exception is if an upgrade is occuring, in which case changes will be accepted.\n\"null\"\n\t  indicates that changes will be accepted from CRs and no NPP will be spun up. NPP validation will not occur.\n   This may be useful in playground mode to avoid spinning up of 1000s of NPPs.\n\"emulate\"\n   indicates that changes will be accepted at the NPP level, without pushing them to a endpoint. NPP validation\n   still occurs.  If no IP address is present, we also run in emulate mode."
                                                                }
                                                            }
                                                        ],
                                                        "description": "Options relating to NPP interactions with the node."
                                                    }
                                                },
                                                {
                                                    "name": "on_boarded",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates if this TopoNode has been bootstrapped or is reachable via configured credentials. Set by BootstrapServer when it completes onboarding functions for a given TopoNode.\nMost applications ignore TopoNodes that have not been onboarded yet."
                                                    }
                                                },
                                                {
                                                    "name": "operating_system",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Operating system running on this TopoNode, e.g. srl."
                                                    }
                                                },
                                                {
                                                    "name": "platform",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                                    }
                                                },
                                                {
                                                    "name": "production_address",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "ipv4",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "The IPv4 production address"
                                                                }
                                                            },
                                                            {
                                                                "name": "ipv6",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "The IPv6 production address"
                                                                }
                                                            }
                                                        ],
                                                        "description": "Production address of this TopoNode - this is the address the real, production instance of this TopoNode uses.\nIf left blank, an address will be allocated from the management IP pool specified in the referenced NodeProfile.\nIf this TopoNode is not bootstrapped by EDA this field must be provided."
                                                    }
                                                },
                                                {
                                                    "name": "serial_number",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Serial number of this TopoNode, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                                    }
                                                },
                                                {
                                                    "name": "system_interface",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Deprecated: Name of the Interface resource representing the primary loopback on the TopoNode, this field will be removed in the future version."
                                                    }
                                                },
                                                {
                                                    "name": "version",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Sets the software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                                    }
                                                }
                                            ],
                                            "description": "A managed network element is represented via a TopoNode resource, describing characteristics of a specific element in the topology."
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "nodedetails",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Address and port used to connected to the node."
                                                    }
                                                },
                                                {
                                                    "name": "nodestate",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "The current state of the connection between NPP and the node.\n\"TryingToConnect\"\n   NPP is attempting to connect and establish connectivity to the node\n\"WaitingForInitialCfg\"\n   NPP is connected to the node but waiting for intial config to push\n\"Committing\"\n\t  NPP is in progress of commiting\n\"RetryingCommit\"\n   NPP lost sync to node and is re-pushing current config\n\"Synced\"\n   NPP is in fully synced state\n\"Standby\"\n   NPP is running in standby mode. This state is only used on standby clusters with georedundancy.\n\"NoIpAddress\"\n   NPP is running but there is no IP address for node. This only happen in sim setups when\n   CX has not created the simulated node, or the simulated pod failed to launch due to image error."
                                                    }
                                                },
                                                {
                                                    "name": "nppdetails",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "NPP address and port for this TopoNode."
                                                    }
                                                },
                                                {
                                                    "name": "npppod",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "NPP pod name"
                                                    }
                                                },
                                                {
                                                    "name": "nppstate",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "The current state of the connection between ConfigEngine and NPP."
                                                    }
                                                },
                                                {
                                                    "name": "operating_system",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Operational operating system running on this TopoNode, e.g. srl, sros."
                                                    }
                                                },
                                                {
                                                    "name": "platform",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Operational platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                                    }
                                                },
                                                {
                                                    "name": "simulate",
                                                    "bool": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Simulate using CX - if true CX is reponsible for generating the TargetNode resource."
                                                    }
                                                },
                                                {
                                                    "name": "version",
                                                    "string": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Operational software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                                    }
                                                }
                                            ],
                                            "description": "TopoNodeStatus defines the observed state of TopoNode"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "udp_proxy",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the UdpProxy"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "buffer_size",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "The proxy will use a buffer of this size for all datagrams it receives and this must be sized\nto accommodate the largest datagrams expected"
                                    }
                                },
                                {
                                    "name": "dest_host",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "The destination hostname or IP address to forward the datagrams to"
                                    }
                                },
                                {
                                    "name": "dest_port",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "The destination UDP port to forward the datagrams to"
                                    }
                                },
                                {
                                    "name": "idle_timeout",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "The proxy will listen for responses from the destination and forward it back to the source\nof the datagram until there is no traffic at all for at least the idle timeout in seconds"
                                    }
                                },
                                {
                                    "name": "proxy_port",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "The UDP port on which to listen for datagrams and then proxy to the destination"
                                    }
                                }
                            ],
                            "description": "UdpProxySpec defines the desired state of UdpProxy"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "UdpProxyStatus defines the observed state of UdpProxy"
                        }
                    }
                ]
            }
        },
        {
            "name": "udp_proxy_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "buffer_size",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The proxy will use a buffer of this size for all datagrams it receives and this must be sized\nto accommodate the largest datagrams expected"
                                                    }
                                                },
                                                {
                                                    "name": "dest_host",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The destination hostname or IP address to forward the datagrams to"
                                                    }
                                                },
                                                {
                                                    "name": "dest_port",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The destination UDP port to forward the datagrams to"
                                                    }
                                                },
                                                {
                                                    "name": "idle_timeout",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The proxy will listen for responses from the destination and forward it back to the source\nof the datagram until there is no traffic at all for at least the idle timeout in seconds"
                                                    }
                                                },
                                                {
                                                    "name": "proxy_port",
                                                    "int64": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The UDP port on which to listen for datagrams and then proxy to the destination"
                                                    }
                                                }
                                            ],
                                            "description": "UdpProxySpec defines the desired state of UdpProxy"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "UdpProxyStatus defines the observed state of UdpProxy"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the Workflow"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "input",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "description": "Input to this flow, adhering to the JSON schema defined in the referenced WorkflowDefinition."
                                    }
                                },
                                {
                                    "name": "type",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Select the WorkflowDefinition to execute."
                                    }
                                }
                            ],
                            "description": "WorkflowSpec defines the desired state of Flow"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "output",
                                    "single_nested": {
                                        "computed_optional_required": "computed",
                                        "description": "Output from this flow, adhering to the JSON schema defined in the referenced FlowDefinition"
                                    }
                                }
                            ],
                            "description": "WorkflowStatus defines the observed state of Flow"
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow_definition",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the WorkflowDefinition"
                        }
                    },
                    {
                        "name": "hash",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "resource content will be returned as it was at the time of this git hash"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "computed"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "optional",
                            "attributes": [
                                {
                                    "name": "flow_definition_resource",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "group",
                                                "string": {
                                                    "computed_optional_required": "optional"
                                                }
                                            },
                                            {
                                                "name": "kind",
                                                "string": {
                                                    "computed_optional_required": "optional"
                                                }
                                            },
                                            {
                                                "name": "version",
                                                "string": {
                                                    "computed_optional_required": "optional"
                                                }
                                            }
                                        ],
                                        "description": "the resource type to be used for this flow, can only be set if Schema is not set"
                                    }
                                },
                                {
                                    "name": "flow_definition_schema",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "json_schema_spec",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "A string containing the JSON schema the workflow accepts as input."
                                                }
                                            },
                                            {
                                                "name": "json_schema_status",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "A string containing the JSON schema the workflow will populate as output."
                                                }
                                            }
                                        ],
                                        "description": "the schema for the flow, can only be set if Resource is not set"
                                    }
                                },
                                {
                                    "name": "image",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Container image containing the flow. For example \"ghcr.io/nokia-eda/apps/operatingsystem:v1.0.0\"."
                                    }
                                },
                                {
                                    "name": "image_pull_secrets",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "Secrets to use to pull the image for this workflow."
                                    }
                                },
                                {
                                    "name": "namespaced",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If set, resources of this CRD are namespace scoped"
                                    }
                                }
                            ],
                            "description": "WorkflowDefinitionSpec defines the desired state of FlowDefinition"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed",
                            "description": "WorkflowDefinitionStatus defines the observed state of FlowDefinition"
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow_definition_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "flow_definition_resource",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "group",
                                                                "string": {
                                                                    "computed_optional_required": "optional"
                                                                }
                                                            },
                                                            {
                                                                "name": "kind",
                                                                "string": {
                                                                    "computed_optional_required": "optional"
                                                                }
                                                            },
                                                            {
                                                                "name": "version",
                                                                "string": {
                                                                    "computed_optional_required": "optional"
                                                                }
                                                            }
                                                        ],
                                                        "description": "the resource type to be used for this flow, can only be set if Schema is not set"
                                                    }
                                                },
                                                {
                                                    "name": "flow_definition_schema",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "json_schema_spec",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "A string containing the JSON schema the workflow accepts as input."
                                                                }
                                                            },
                                                            {
                                                                "name": "json_schema_status",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "A string containing the JSON schema the workflow will populate as output."
                                                                }
                                                            }
                                                        ],
                                                        "description": "the schema for the flow, can only be set if Resource is not set"
                                                    }
                                                },
                                                {
                                                    "name": "image",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Container image containing the flow. For example \"ghcr.io/nokia-eda/apps/operatingsystem:v1.0.0\"."
                                                    }
                                                },
                                                {
                                                    "name": "image_pull_secrets",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Secrets to use to pull the image for this workflow."
                                                    }
                                                },
                                                {
                                                    "name": "namespaced",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "If set, resources of this CRD are namespace scoped"
                                                    }
                                                }
                                            ],
                                            "description": "WorkflowDefinitionSpec defines the desired state of FlowDefinition"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "description": "WorkflowDefinitionStatus defines the observed state of FlowDefinition"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow_get_inputs_resp_elem",
            "schema": {
                "attributes": [
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "name of the Workflow"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "workflow_get_inputs_resp_elem",
                        "set_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "ack_prompt",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "group",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "name",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "namespace",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "schema_prompt",
                                        "single_nested": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow_list",
            "schema": {
                "attributes": [
                    {
                        "name": "fields",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched."
                        }
                    },
                    {
                        "name": "filter",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned."
                        }
                    },
                    {
                        "name": "labelselector",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "a label selector string to filter the results based on CR labels"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "required",
                            "description": "the namespace scope in which to operate"
                        }
                    },
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    },
                    {
                        "name": "items",
                        "list_nested": {
                            "computed_optional_required": "computed",
                            "nested_object": {
                                "attributes": [
                                    {
                                        "name": "api_version",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "kind",
                                        "string": {
                                            "computed_optional_required": "computed"
                                        }
                                    },
                                    {
                                        "name": "metadata",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "annotations",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "labels",
                                                    "map": {
                                                        "computed_optional_required": "computed",
                                                        "element_type": {
                                                            "string": {}
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "name",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                },
                                                {
                                                    "name": "namespace",
                                                    "string": {
                                                        "computed_optional_required": "computed"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spec",
                                        "single_nested": {
                                            "computed_optional_required": "optional",
                                            "attributes": [
                                                {
                                                    "name": "input",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Input to this flow, adhering to the JSON schema defined in the referenced WorkflowDefinition."
                                                    }
                                                },
                                                {
                                                    "name": "type",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Select the WorkflowDefinition to execute."
                                                    }
                                                }
                                            ],
                                            "description": "WorkflowSpec defines the desired state of Flow"
                                        }
                                    },
                                    {
                                        "name": "status",
                                        "single_nested": {
                                            "computed_optional_required": "computed",
                                            "attributes": [
                                                {
                                                    "name": "output",
                                                    "single_nested": {
                                                        "computed_optional_required": "computed",
                                                        "description": "Output from this flow, adhering to the JSON schema defined in the referenced FlowDefinition"
                                                    }
                                                }
                                            ],
                                            "description": "WorkflowStatus defines the observed state of Flow"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed"
                        }
                    }
                ]
            }
        }
    ],
    "provider": {
        "name": "coreapp"
    },
    "resources": [
        {
            "name": "cluster_role",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "ClusterRole"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^ClusterRole$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "A description for the role."
                                    }
                                },
                                {
                                    "name": "resource_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "api_groups",
                                                    "list": {
                                                        "computed_optional_required": "required",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Permissions for resources specified by the rule.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n\"readWrite\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "resources",
                                                    "list": {
                                                        "computed_optional_required": "required",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to resources."
                                    }
                                },
                                {
                                    "name": "table_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.LengthAtLeast(1)"
                                                                }
                                                            },
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "regexp"
                                                                        },
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^\\\\..*\"), \"\")"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Permissions for the given EDB path.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to EDB tables, including via EQL."
                                    }
                                },
                                {
                                    "name": "url_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.LengthAtLeast(1)"
                                                                }
                                                            },
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "regexp"
                                                                        },
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^/.*\"), \"\")"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "The permissions for the API server URL for the rule.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n\"readWrite\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Rules for access to APIServer proxied routes."
                                    }
                                }
                            ],
                            "description": "ClusterRole defines a set of permissions to access EDA resources.\nClusterRoles and users are bound via groups, selecting a set of users and a set of ClusterRoles to bind."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "RoleStatus defines the observed state of Role"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the ClusterRole"
                        }
                    }
                ]
            }
        },
        {
            "name": "deviation_action",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "DeviationAction"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^DeviationAction$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "actions",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "action",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Action to perform on matching Deviations.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"setAccept\",\n\"clearAccept\",\n\"reject\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Path to match Deviation resources on this target. Only one action is allowed per path."
                                                    }
                                                },
                                                {
                                                    "name": "recurse",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Recursively accept/reject Deviations from the specified path."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The set of actions to perform on the target."
                                    }
                                },
                                {
                                    "name": "node_endpoint",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "The target on which this action is to be performed."
                                    }
                                }
                            ],
                            "description": "DeviationAction allows manual and API-driven actions to be performed on Deviation resources.\nThey are the only means to which and end user can accept or reject deviations, as Deviation resources themselves are read only."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "attributes": [
                                {
                                    "name": "result",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "The result of the set of actions.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"OK\",\n\"Failed\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "transaction_id",
                                    "int64": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "The transaction id these actions were part of."
                                    }
                                }
                            ],
                            "description": "DeviationActionStatus defines the observed state of DeviationAction"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the DeviationAction"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "edge_interface",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "EdgeInterface"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^EdgeInterface$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "bridge_domain",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a Bridge Domain"
                                    }
                                },
                                {
                                    "name": "encap_type",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": "null"
                                        },
                                        "description": "Indicates if the EdgeInterface uses VLAN tagging",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"null\",\n\"dot1q\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "gateway_ipv4addresses",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "ip_prefix",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Address and mask to use"
                                                    }
                                                },
                                                {
                                                    "name": "primary",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates which address to use as primary for broadcast"
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of gateway IPv4 addresses in ip/mask form - e.g. 192.168.0.1/24"
                                    }
                                },
                                {
                                    "name": "gateway_ipv6addresses",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "ip_prefix",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Address and mask to use"
                                                    }
                                                },
                                                {
                                                    "name": "primary",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Indicates which address to use as primary for broadcast"
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of gateway IPv6 addresses in ip/mask form - e.g. fc00::1/120"
                                    }
                                },
                                {
                                    "name": "interface_resource",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Reference to an interface"
                                    }
                                },
                                {
                                    "name": "router",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a Router"
                                    }
                                },
                                {
                                    "name": "vlan_id",
                                    "int64": {
                                        "computed_optional_required": "optional",
                                        "description": "Single value between 0-4094 supported",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(0, 4094)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "EdgeInterfaceSpec defines the desired state of EdgeInterface"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "EdgeInterfaceStatus defines the observed state of EdgeInterface"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the EdgeInterface"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "http_proxy",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "HttpProxy"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^HttpProxy$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "auth_type",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Determines where authentication happens.\nIf \"atDestination\", then no authentication happens in API server and any auth tokens are forwarded as is.\nIf \"inApiServer\", then authentication happens within the API server and auth tokens are stripped prior to forwarding.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"atDestination\",\n\"inApiServer\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "root_url",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "The proxy destination, including the protocol."
                                    }
                                }
                            ],
                            "description": "HttpProxySpec defines the desired state of HttpProxy"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "HttpProxyStatus defines the observed state of HttpProxy"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the HttpProxy"
                        }
                    }
                ]
            }
        },
        {
            "name": "index_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "IndexAllocationPool"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^IndexAllocationPool$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "int64": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Index to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "int64": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "int64": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "Range of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "size",
                                                    "int64": {
                                                        "computed_optional_required": "required",
                                                        "description": "Number of elements in the segment."
                                                    }
                                                },
                                                {
                                                    "name": "start",
                                                    "int64": {
                                                        "computed_optional_required": "required",
                                                        "description": "Starting value of the segment."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing indexes to allocate.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "IndexAllocationPool is a generic allocation pool supporting allocation of indexes from a set of segments.\nIt supports allocating things like VLANs, subinterface indexes, autonomous system numbers, or any other integer-based index."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "IndexAllocationPoolStatus defines the observed state of IndexAllocationPool"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the IndexAllocationPool"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "IPAllocationPool"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^IPAllocationPool$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocate_broadcast_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the broadcast address."
                                                    }
                                                },
                                                {
                                                    "name": "allocate_network_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the network address."
                                                    }
                                                },
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "IPAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPInSubnetAllocationPool in that it returns a single unzoned IP address, i.e. an IP address without a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "IPAllocationPoolStatus defines the observed state of IPAllocationPool"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the IPAllocationPool"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "ip_in_subnet_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "IPInSubnetAllocationPool"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^IPInSubnetAllocationPool$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocate_broadcast_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the broadcast address."
                                                    }
                                                },
                                                {
                                                    "name": "allocate_network_address",
                                                    "bool": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Permit the allocation of the network address."
                                                    }
                                                },
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing IPv4 or IPv6 addresses to allocate.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "IPInSubnetAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPAllocationPool in that it returns a single zoned IP address, i.e. an IP address with a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1/24.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "IPInSubnetAllocationPoolStatus defines the observed state of IPInSubnetAllocationPool"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the IPInSubnetAllocationPool"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "namespace",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "Namespace"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^Namespace$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "An optional description of the use of the namespace."
                                    }
                                }
                            ],
                            "description": "A Namespace is a logical partition within the cluster that provides a mechanism for isolating resources.\nNamespaces allow for resource segmentation, enabling multiple teams or applications to share the same cluster without conflict."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "NamespaceStatus defines the observed state of Namespace"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the Namespace"
                        }
                    }
                ]
            }
        },
        {
            "name": "node_profile",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "NodeProfile"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^NodeProfile$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotate",
                                    "bool": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": false
                                        },
                                        "description": "Indicates if NPP should annotate sent configuration."
                                    }
                                },
                                {
                                    "name": "container_image",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Container image to use when simulating TopoNodes referencing this NodeProfile, e.g. ghcr.io/nokia/srlinux:24.7.1."
                                    }
                                },
                                {
                                    "name": "dhcp",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "dhcp4options",
                                                "list_nested": {
                                                    "computed_optional_required": "optional",
                                                    "nested_object": {
                                                        "attributes": [
                                                            {
                                                                "name": "option",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "DHCPv4 option to return to the TopoNode.",
                                                                    "validators": [
                                                                        {
                                                                            "custom": {
                                                                                "imports": [
                                                                                    {
                                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                                    }
                                                                                ],
                                                                                "schema_definition": "stringvalidator.OneOf(\n\"1-SubnetMask\",\n\"2-TimeOffset\",\n\"3-Router\",\n\"4-TimeServer\",\n\"5-NameServer\",\n\"6-DomainNameServer\",\n\"7-LogServer\",\n\"8-QuoteServer\",\n\"9-LPRServer\",\n\"10-ImpressServer\",\n\"11-ResourceLocationServer\",\n\"12-HostName\",\n\"13-BootFileSize\",\n\"14-MeritDumpFile\",\n\"15-DomainName\",\n\"16-SwapServer\",\n\"17-RootPath\",\n\"18-ExtensionsPath\",\n\"19-IPForwarding\",\n\"20-NonLocalSourceRouting\",\n\"21-PolicyFilter\",\n\"22-MaximumDatagramAssemblySize\",\n\"23-DefaultIPTTL\",\n\"24-PathMTUAgingTimeout\",\n\"25-PathMTUPlateauTable\",\n\"26-InterfaceMTU\",\n\"27-AllSubnetsAreLocal\",\n\"28-BroadcastAddress\",\n\"29-PerformMaskDiscovery\",\n\"30-MaskSupplier\",\n\"31-PerformRouterDiscovery\",\n\"32-RouterSolicitationAddress\",\n\"33-StaticRoutingTable\",\n\"34-TrailerEncapsulation\",\n\"35-ArpCacheTimeout\",\n\"36-EthernetEncapsulation\",\n\"37-DefaulTCPTTL\",\n\"38-TCPKeepaliveInterval\",\n\"39-TCPKeepaliveGarbage\",\n\"40-NetworkInformationServiceDomain\",\n\"41-NetworkInformationServers\",\n\"42-NTPServers\",\n\"43-VendorSpecificInformation\",\n\"44-NetBIOSOverTCPIPNameServer\",\n\"45-NetBIOSOverTCPIPDatagramDistributionServer\",\n\"46-NetBIOSOverTCPIPNodeType\",\n\"47-NetBIOSOverTCPIPScope\",\n\"48-XWindowSystemFontServer\",\n\"49-XWindowSystemDisplayManager\",\n\"50-RequestedIPAddress\",\n\"51-IPAddressLeaseTime\",\n\"52-OptionOverload\",\n\"53-DHCPMessageType\",\n\"54-ServerIdentifier\",\n\"55-ParameterRequestList\",\n\"56-Message\",\n\"57-MaximumDHCPMessageSize\",\n\"58-RenewTimeValue\",\n\"59-RebindingTimeValue\",\n\"60-ClassIdentifier\",\n\"61-ClientIdentifier\",\n\"62-NetWareIPDomainName\",\n\"63-NetWareIPInformation\",\n\"64-NetworkInformationServicePlusDomain\",\n\"65-NetworkInformationServicePlusServers\",\n\"66-TFTPServerName\",\n\"67-BootfileName\",\n\"68-MobileIPHomeAgent\",\n\"69-SimpleMailTransportProtocolServer\",\n\"70-PostOfficeProtocolServer\",\n\"71-NetworkNewsTransportProtocolServer\",\n\"72-DefaultWorldWideWebServer\",\n\"73-DefaultFingerServer\",\n\"74-DefaultInternetRelayChatServer\",\n\"75-StreetTalkServer\",\n\"76-StreetTalkDirectoryAssistanceServer\",\n\"77-UserClassInformation\",\n\"78-SLPDirectoryAgent\",\n\"79-SLPServiceScope\",\n\"80-RapidCommit\",\n\"81-FQDN\",\n\"82-RelayAgentInformation\",\n\"83-InternetStorageNameService\",\n\"85-NDSServers\",\n\"86-NDSTreeName\",\n\"87-NDSContext\",\n\"88-BCMCSControllerDomainNameList\",\n\"89-BCMCSControllerIPv4AddressList\",\n\"90-Authentication\",\n\"91-ClientLastTransactionTime\",\n\"92-AssociatedIP\",\n\"93-ClientSystemArchitectureType\",\n\"94-ClientNetworkInterfaceIdentifier\",\n\"95-LDAP\",\n\"97-ClientMachineIdentifier\",\n\"98-OpenGroupUserAuthentication\",\n\"99-GeoConfCivic\",\n\"100-IEEE10031TZString\",\n\"101-ReferenceToTZDatabase\",\n\"112-NetInfoParentServerAddress\",\n\"113-NetInfoParentServerTag\",\n\"114-URL\",\n\"116-AutoConfigure\",\n\"117-NameServiceSearch\",\n\"118-SubnetSelection\",\n\"119-DNSDomainSearchList\",\n\"120-SIPServers\",\n\"121-ClasslessStaticRoute\",\n\"122-CCC\",\n\"123-GeoConf\",\n\"124-VendorIdentifyingVendorClass\",\n\"125-VendorIdentifyingVendorSpecific\",\n\"128-TFTPServerIPAddress\",\n\"129-CallServerIPAddress\",\n\"130-DiscriminationString\",\n\"131-RemoteStatisticsServerIPAddress\",\n\"132-8021PVLANID\",\n\"133-8021QL2Priority\",\n\"134-DiffservCodePoint\",\n\"135-HTTPProxyForPhoneSpecificApplications\",\n\"136-PANAAuthenticationAgent\",\n\"137-LoSTServer\",\n\"138-CAPWAPAccessControllerAddresses\",\n\"139-OPTIONIPv4AddressMoS\",\n\"140-OPTIONIPv4FQDNMoS\",\n\"141-SIPUAConfigurationServiceDomains\",\n\"142-OPTIONIPv4AddressANDSF\",\n\"143-OPTIONIPv6AddressANDSF\",\n\"150-TFTPServerAddress\",\n\"151-StatusCode\",\n\"152-BaseTime\",\n\"153-StartTimeOfState\",\n\"154-QueryStartTime\",\n\"155-QueryEndTime\",\n\"156-DHCPState\",\n\"157-DataSource\",\n\"175-Etherboot\",\n\"176-IPTelephone\",\n\"177-EtherbootPacketCableAndCableHome\",\n\"208-PXELinuxMagicString\",\n\"209-PXELinuxConfigFile\",\n\"210-PXELinuxPathPrefix\",\n\"211-PXELinuxRebootTime\",\n\"212-OPTION6RD\",\n\"213-OPTIONv4AccessDomain\",\n\"220-SubnetAllocation\",\n\"221-VirtualSubnetAllocation\",\n\"224-Reserved\",\n\"225-Reserved\",\n\"226-Reserved\",\n\"227-Reserved\",\n\"228-Reserved\",\n\"229-Reserved\",\n\"230-Reserved\",\n\"231-Reserved\",\n\"232-Reserved\",\n\"233-Reserved\",\n\"234-Reserved\",\n\"235-Reserved\",\n\"236-Reserved\",\n\"237-Reserved\",\n\"238-Reserved\",\n\"239-Reserved\",\n\"240-Reserved\",\n\"241-Reserved\",\n\"242-Reserved\",\n\"243-Reserved\",\n\"244-Reserved\",\n\"245-Reserved\",\n\"246-Reserved\",\n\"247-Reserved\",\n\"248-Reserved\",\n\"249-Reserved\",\n\"250-Reserved\",\n\"251-Reserved\",\n\"252-Reserved\",\n\"253-Reserved\",\n\"254-Reserved\",\n\"255-End\",\n)"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": "value",
                                                                "list": {
                                                                    "computed_optional_required": "required",
                                                                    "element_type": {
                                                                        "string": {}
                                                                    },
                                                                    "description": "Value to return to the TopoNode for the specified option.",
                                                                    "validators": [
                                                                        {
                                                                            "custom": {
                                                                                "imports": [
                                                                                    {
                                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                                    }
                                                                                ],
                                                                                "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "description": "DHCPv4 options to return to TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "dhcp6options",
                                                "list_nested": {
                                                    "computed_optional_required": "optional",
                                                    "nested_object": {
                                                        "attributes": [
                                                            {
                                                                "name": "option",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "DHCPv6 option to return to the TopoNode.",
                                                                    "validators": [
                                                                        {
                                                                            "custom": {
                                                                                "imports": [
                                                                                    {
                                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                                    }
                                                                                ],
                                                                                "schema_definition": "stringvalidator.OneOf(\n\"59-BootfileUrl\",\n)"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": "value",
                                                                "list": {
                                                                    "computed_optional_required": "required",
                                                                    "element_type": {
                                                                        "string": {}
                                                                    },
                                                                    "description": "Value to return to the TopoNode for the specified option.",
                                                                    "validators": [
                                                                        {
                                                                            "custom": {
                                                                                "imports": [
                                                                                    {
                                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                                    }
                                                                                ],
                                                                                "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "description": "DHCPv6 options to return to TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "management_poolv4",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "IPInSubnetAllocationPool to use for IPv4 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "management_poolv6",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "IPInSubnetAllocationPool to use for IPv6 allocations of the management address for TopoNodes referencing this NodeProfile."
                                                }
                                            },
                                            {
                                                "name": "preferred_address_family",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "Preferred IP address family",
                                                    "validators": [
                                                        {
                                                            "custom": {
                                                                "imports": [
                                                                    {
                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                    }
                                                                ],
                                                                "schema_definition": "stringvalidator.OneOf(\n\"IPv4\",\n\"IPv6\",\n)"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "description": "DHCP options to use when onboarding the TopoNode. Optional if not bootstrapping using EDA."
                                    }
                                },
                                {
                                    "name": "image_pull_secret",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Secret used to authenticate to the container registry where the container image is hosted."
                                    }
                                },
                                {
                                    "name": "images",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "image",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "URL hosting the software image, e.g. srlimages/srlinux-24.7.1.bin."
                                                    }
                                                },
                                                {
                                                    "name": "image_md5",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "URL hosting the software image md5 hash. e.g. srlimages/srlinux-24.7.1.bin.md5."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "URLs hosting software images for bootstrapping TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "license",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "ConfigMap containing a license for TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "llm_db",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "URL containing LLDB  to use when interacting with LLM-DB and OpenAI for query autocompletion, e.g. http://eda-asvr/llmdb/ce-llm-db-srlinux-24.7.1.tar.gz."
                                    }
                                },
                                {
                                    "name": "node_user",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Reference to a NodeUser to use for authentication to TopoNodes referencing this NodeProfile."
                                    }
                                },
                                {
                                    "name": "onboarding_password",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": "NokiaSrl1!"
                                        },
                                        "description": "The password to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin.",
                                        "sensitive": true
                                    }
                                },
                                {
                                    "name": "onboarding_username",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": "admin"
                                        },
                                        "description": "The username to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Sets the operating system of this NodeProfile, e.g. srl.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"srl\",\n\"sros\",\n\"eos\",\n\"sonic\",\n\"ios-xr\",\n\"nxos\",\n\"linux\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "platform_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.type."
                                    }
                                },
                                {
                                    "name": "port",
                                    "int64": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": 57400
                                        },
                                        "description": "Port used to establish a connection to the TopoNode, e.g. 57400.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(1, 65535)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "serial_number_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the serial number string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.serial-number."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Sets the software version of this NodeProfile, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                },
                                {
                                    "name": "version_match",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Regular expression to match the node-retrieved version string to TopoNode version, e.g. v0\\.0\\.0.*."
                                    }
                                },
                                {
                                    "name": "version_path",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .system.information.version."
                                    }
                                },
                                {
                                    "name": "yang",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "URL containing YANG modules and schema profile to use when interacting with TopoNodes referencing this NodeProfile, e.g. http://eda-asvr/schemaprofiles/srlinux-24.7.1.zip."
                                    }
                                }
                            ],
                            "description": "NodeProfileSpec defines the desired state of NodeProfile"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the NodeProfile"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "node_user",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "NodeUser"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^NodeUser$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "group_bindings",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "groups",
                                                    "list": {
                                                        "computed_optional_required": "required",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Assigned groups for this user."
                                                    }
                                                },
                                                {
                                                    "name": "node_selector",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Selector to use when selecting TopoNodes to deploy this user to."
                                                    }
                                                },
                                                {
                                                    "name": "nodes",
                                                    "list": {
                                                        "computed_optional_required": "optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": " TopoNodes to deploy this user to."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Matching of this user to node-specific permissions via groups."
                                    }
                                },
                                {
                                    "name": "password",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Password for this user.",
                                        "sensitive": true
                                    }
                                },
                                {
                                    "name": "ssh_public_keys",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "SSH public keys to deploy for the user."
                                    }
                                },
                                {
                                    "name": "username",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Name of this user. If not provided, the name of the resource will be used.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(32)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "The NodeUser resource represents a user that can be deployed to a set of TopoNodes. It supports managing the user's password, SSH keys, and group bindings.\nAdditionally a NodeUser is referenced by a NodeProfile to indicate how NPP should connect to TopoNodes."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "attributes": [
                                {
                                    "name": "group_bindings_1",
                                    "list_nested": {
                                        "computed_optional_required": "computed_optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "groups",
                                                    "list": {
                                                        "computed_optional_required": "computed_optional",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Groups this user is a member of on this node."
                                                    }
                                                },
                                                {
                                                    "name": "node",
                                                    "string": {
                                                        "computed_optional_required": "computed_optional",
                                                        "description": "Node this user is deployed to."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of TopoNodes user has been deployed to, along with corresponding groups."
                                    }
                                }
                            ],
                            "description": "Deployment status of this NodeUser."
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the NodeUser"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "role",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "Role"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^Role$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "description",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "A description for the role."
                                    }
                                },
                                {
                                    "name": "resource_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "api_groups",
                                                    "list": {
                                                        "computed_optional_required": "required",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Permissions for resources specified by the rule.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n\"readWrite\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "resources",
                                                    "list": {
                                                        "computed_optional_required": "required",
                                                        "element_type": {
                                                            "string": {}
                                                        },
                                                        "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to kubernetes resources"
                                    }
                                },
                                {
                                    "name": "table_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.LengthAtLeast(1)"
                                                                }
                                                            },
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "regexp"
                                                                        },
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^\\\\..*\"), \"\")"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Permissions for the given EDB path.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to the database tables."
                                    }
                                },
                                {
                                    "name": "url_rules",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "path",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.LengthAtLeast(1)"
                                                                }
                                                            },
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "regexp"
                                                                        },
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^/.*\"), \"\")"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "permissions",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "The permissions for the API server URL for the rule.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"none\",\n\"read\",\n\"readWrite\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "The rules for access to api-server proxied routes."
                                    }
                                }
                            ],
                            "description": "RoleSpec defines the desired state of Role"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "RoleStatus defines the observed state of Role"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the Role"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "subnet_allocation_pool",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "SubnetAllocationPool"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^SubnetAllocationPool$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "publish_allocations",
                                    "bool": {
                                        "computed_optional_required": "optional",
                                        "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of."
                                    }
                                },
                                {
                                    "name": "segments",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "allocations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "name",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Name of this allocation."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "value",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Allocation to reserve."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of reservations to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "reservations",
                                                    "list_nested": {
                                                        "computed_optional_required": "optional",
                                                        "nested_object": {
                                                            "attributes": [
                                                                {
                                                                    "name": "end",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to reserve to."
                                                                    }
                                                                },
                                                                {
                                                                    "name": "start",
                                                                    "string": {
                                                                        "computed_optional_required": "required",
                                                                        "description": "Value to start reserving."
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of ranges to exclude from allocations from this segment."
                                                    }
                                                },
                                                {
                                                    "name": "subnet",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "IPv4 or IPv6 subnet to allocate subnets from, e.g. 10.1.0.0/16."
                                                    }
                                                },
                                                {
                                                    "name": "subnet_length",
                                                    "int64": {
                                                        "computed_optional_required": "required",
                                                        "description": "The size of the subnets to be allocated from within the parent subnet, e.g. 29 (which could allocate 10.1.0.8/29, for example)."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of segments containing subnets to allocate.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "SubnetAllocationPool is a generic subnet allocation pool supporting allocation of IPv4 and/or IPv6 child subnets from a list of parent subnet segments.\nIt allocates a subnet of the configured length from the provided parent subnet.\nFor example a pool could return 10.1.0.8/29 when a segment is defined as subnet 10.1.0.0/16 with subnet length 29.\nConsult application documentation to know which pool type to use for a given use case."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "SubnetAllocationPoolStatus defines the observed state of SubnetAllocationPool"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the SubnetAllocationPool"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_breakout",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "TopoBreakout"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^TopoBreakout$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "channels",
                                    "int64": {
                                        "computed_optional_required": "required",
                                        "description": "The number of breakout channels to create",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(1, 8)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "interface",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "A list of normalized parent interface/port"
                                    }
                                },
                                {
                                    "name": "node",
                                    "list": {
                                        "computed_optional_required": "required",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "Reference to a list of TopoNodes where the parent interfaces are to be broken out"
                                    }
                                },
                                {
                                    "name": "speed",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "The speed of each breakout channel",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"800G\",\n\"400G\",\n\"200G\",\n\"100G\",\n\"50G\",\n\"40G\",\n\"25G\",\n\"10G\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "TopoBreakoutSpec defines the desired state of TopoBreakout"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "TopoBreakoutStatus defines the observed state of TopoBreakout"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the TopoBreakout"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_link",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "TopoLink"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^TopoLink$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "links",
                                    "list_nested": {
                                        "computed_optional_required": "required",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "local",
                                                    "single_nested": {
                                                        "computed_optional_required": "required",
                                                        "attributes": [
                                                            {
                                                                "name": "interface",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                }
                                                            },
                                                            {
                                                                "name": "interface_resource",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "Reference to a Interface."
                                                                }
                                                            },
                                                            {
                                                                "name": "node",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "Reference to a TopoNode."
                                                                }
                                                            }
                                                        ],
                                                        "description": "Local, or \"A\" endpoint of the link."
                                                    }
                                                },
                                                {
                                                    "name": "remote",
                                                    "single_nested": {
                                                        "computed_optional_required": "optional",
                                                        "attributes": [
                                                            {
                                                                "name": "interface",
                                                                "string": {
                                                                    "computed_optional_required": "optional",
                                                                    "description": "Normalized name of the interface/port, e.g. ethernet-1-1."
                                                                }
                                                            },
                                                            {
                                                                "name": "interface_resource",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "Reference to a Interface."
                                                                }
                                                            },
                                                            {
                                                                "name": "node",
                                                                "string": {
                                                                    "computed_optional_required": "required",
                                                                    "description": "Reference to a TopoNode."
                                                                }
                                                            }
                                                        ],
                                                        "description": "Remote, or \"B\" endpoint of the link."
                                                    }
                                                },
                                                {
                                                    "name": "speed",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "Speed of the link.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"800G\",\n\"400G\",\n\"200G\",\n\"100G\",\n\"50G\",\n\"40G\",\n\"25G\",\n\"10G\",\n\"2.5G\",\n\"1G\",\n\"100M\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "type",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Specify the type of link.\nIf type is set to edge, topology information for the remote device can be set; when doing so the Remote Node can be set as the hostname of the remote device and Remote Interface as the remote interface name in the device specific format, e.g. eth0.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"edge\",\n\"interSwitch\",\n\"loopback\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "Define the set of physical links making up this TopoLink.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "listvalidator.SizeAtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "TopoLink represents a logical link between two TopoNodes. It may include more than one physical link, being used to represent a LAG or multihomed link.\nTo create a point to point link with a single interface on both sides use a single link property.\nTo create a point to point link with a LAG configured on both side, use two links with matching nodes.\nA multihomed LAG is created by using two or more links where the A side and/or B side can be different.\nCreating a link with only A specified will create an edge interface."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "attributes": [
                                {
                                    "name": "members",
                                    "list_nested": {
                                        "computed_optional_required": "computed_optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "interface",
                                                    "string": {
                                                        "computed_optional_required": "computed_optional",
                                                        "description": "Reference to an Interface"
                                                    }
                                                },
                                                {
                                                    "name": "node",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Reference to a TopoNode"
                                                    }
                                                },
                                                {
                                                    "name": "operational_state",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Indicates the operational state of the TopoLink member."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of members present on the TopoLink."
                                    }
                                },
                                {
                                    "name": "operational_state",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Indicates the aggregate operational state of the TopoLink."
                                    }
                                }
                            ],
                            "description": "TopoLinkStatus defines the observed state of TopoLink"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the TopoLink"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "topo_node",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "TopoNode"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^TopoNode$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "namespace",
                                    "string": {
                                        "computed_optional_required": "required"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "component",
                                    "list_nested": {
                                        "computed_optional_required": "optional",
                                        "nested_object": {
                                            "attributes": [
                                                {
                                                    "name": "kind",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "The kind of Component, e.g. lineCard.",
                                                        "validators": [
                                                            {
                                                                "custom": {
                                                                    "imports": [
                                                                        {
                                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                        }
                                                                    ],
                                                                    "schema_definition": "stringvalidator.OneOf(\n\"controlCard\",\n\"lineCard\",\n\"fabric\",\n\"mda\",\n\"connector\",\n\"xiom\",\n\"powerShelf\",\n\"powerModule\",\n)"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "name": "slot",
                                                    "string": {
                                                        "computed_optional_required": "optional",
                                                        "description": "The slot this Component resides in, unset for Components that do not have a slot or ID.\ne.g. 1 would denote the linecard slot 1, 1/1 would denote linecard slot 1 mda slot 1."
                                                    }
                                                },
                                                {
                                                    "name": "type",
                                                    "string": {
                                                        "computed_optional_required": "required",
                                                        "description": "Denotes the type of hardware being provisioned, e.g. xcm-x20."
                                                    }
                                                }
                                            ]
                                        },
                                        "description": "List of components within the TopoNode.\nUsed to define the type and location of linecards, fabrics (SFM), media adapter cards (MDA) and control cards (CPM)."
                                    }
                                },
                                {
                                    "name": "license",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Reference to a ConfigMap containing a license for the TopoNode. Overrides the license set in the referenced NodeProfile, if present."
                                    }
                                },
                                {
                                    "name": "mac_address",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "MAC address to associate with this TopoNode.\nTypically the chassis MAC address, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                    }
                                },
                                {
                                    "name": "node_profile",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Reference to a NodeProfile to use with this TopoNode."
                                    }
                                },
                                {
                                    "name": "npp",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "mode",
                                                "string": {
                                                    "computed_optional_required": "computed_optional",
                                                    "default": {
                                                        "static": "normal"
                                                    },
                                                    "description": "The mode in which this TopoNode is functioning.\n\"normal\" (the default)\n   indicates that NPP is expecting an endpoint to exist, and will accept and confirm changes only if the endpoint\n   accepts them.\n\"maintenance\"\n   indicates that no changes will be accepted for the TopoNode, irrespective if the endpoint is up and reachable.\n   The exception is if an upgrade is occuring, in which case changes will be accepted.\n\"null\"\n\t  indicates that changes will be accepted from CRs and no NPP will be spun up. NPP validation will not occur.\n   This may be useful in playground mode to avoid spinning up of 1000s of NPPs.\n\"emulate\"\n   indicates that changes will be accepted at the NPP level, without pushing them to a endpoint. NPP validation\n   still occurs.  If no IP address is present, we also run in emulate mode.",
                                                    "validators": [
                                                        {
                                                            "custom": {
                                                                "imports": [
                                                                    {
                                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                                    }
                                                                ],
                                                                "schema_definition": "stringvalidator.OneOf(\n\"normal\",\n\"maintenance\",\n\"null\",\n\"emulate\",\n)"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "description": "Options relating to NPP interactions with the node."
                                    }
                                },
                                {
                                    "name": "on_boarded",
                                    "bool": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": false
                                        },
                                        "description": "Indicates if this TopoNode has been bootstrapped or is reachable via configured credentials. Set by BootstrapServer when it completes onboarding functions for a given TopoNode.\nMost applications ignore TopoNodes that have not been onboarded yet."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": "srl"
                                        },
                                        "description": "Operating system running on this TopoNode, e.g. srl.",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(\n\"srl\",\n\"sros\",\n\"eos\",\n\"sonic\",\n\"ios-xr\",\n\"nxos\",\n\"linux\",\n)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "platform",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                    }
                                },
                                {
                                    "name": "production_address",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "ipv4",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "The IPv4 production address"
                                                }
                                            },
                                            {
                                                "name": "ipv6",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "The IPv6 production address"
                                                }
                                            }
                                        ],
                                        "description": "Production address of this TopoNode - this is the address the real, production instance of this TopoNode uses.\nIf left blank, an address will be allocated from the management IP pool specified in the referenced NodeProfile.\nIf this TopoNode is not bootstrapped by EDA this field must be provided."
                                    }
                                },
                                {
                                    "name": "serial_number",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Serial number of this TopoNode, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX."
                                    }
                                },
                                {
                                    "name": "system_interface",
                                    "string": {
                                        "computed_optional_required": "optional",
                                        "description": "Deprecated: Name of the Interface resource representing the primary loopback on the TopoNode, this field will be removed in the future version."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Sets the software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                }
                            ],
                            "description": "A managed network element is represented via a TopoNode resource, describing characteristics of a specific element in the topology."
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "attributes": [
                                {
                                    "name": "nodedetails",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "Address and port used to connected to the node."
                                    }
                                },
                                {
                                    "name": "nodestate",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "The current state of the connection between NPP and the node.\n\"TryingToConnect\"\n   NPP is attempting to connect and establish connectivity to the node\n\"WaitingForInitialCfg\"\n   NPP is connected to the node but waiting for intial config to push\n\"Committing\"\n\t  NPP is in progress of commiting\n\"RetryingCommit\"\n   NPP lost sync to node and is re-pushing current config\n\"Synced\"\n   NPP is in fully synced state\n\"Standby\"\n   NPP is running in standby mode. This state is only used on standby clusters with georedundancy.\n\"NoIpAddress\"\n   NPP is running but there is no IP address for node. This only happen in sim setups when\n   CX has not created the simulated node, or the simulated pod failed to launch due to image error."
                                    }
                                },
                                {
                                    "name": "nppdetails",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "NPP address and port for this TopoNode."
                                    }
                                },
                                {
                                    "name": "npppod",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "NPP pod name"
                                    }
                                },
                                {
                                    "name": "nppstate",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "The current state of the connection between ConfigEngine and NPP."
                                    }
                                },
                                {
                                    "name": "operating_system",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "Operational operating system running on this TopoNode, e.g. srl, sros."
                                    }
                                },
                                {
                                    "name": "platform",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "Operational platform type of this TopoNode, e.g. 7220 IXR-D3L."
                                    }
                                },
                                {
                                    "name": "simulate",
                                    "bool": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "Simulate using CX - if true CX is reponsible for generating the TargetNode resource."
                                    }
                                },
                                {
                                    "name": "version",
                                    "string": {
                                        "computed_optional_required": "computed_optional",
                                        "description": "Operational software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros)."
                                    }
                                }
                            ],
                            "description": "TopoNodeStatus defines the observed state of TopoNode"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the TopoNode"
                        }
                    },
                    {
                        "name": "namespace",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "the namespace scope in which to operate"
                        }
                    }
                ]
            }
        },
        {
            "name": "udp_proxy",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "UdpProxy"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^UdpProxy$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "buffer_size",
                                    "int64": {
                                        "computed_optional_required": "required",
                                        "description": "The proxy will use a buffer of this size for all datagrams it receives and this must be sized\nto accommodate the largest datagrams expected",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(64, 65535)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "dest_host",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "The destination hostname or IP address to forward the datagrams to"
                                    }
                                },
                                {
                                    "name": "dest_port",
                                    "int64": {
                                        "computed_optional_required": "required",
                                        "description": "The destination UDP port to forward the datagrams to",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(1, 65535)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "idle_timeout",
                                    "int64": {
                                        "computed_optional_required": "required",
                                        "description": "The proxy will listen for responses from the destination and forward it back to the source\nof the datagram until there is no traffic at all for at least the idle timeout in seconds",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.AtLeast(1)"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "proxy_port",
                                    "int64": {
                                        "computed_optional_required": "required",
                                        "description": "The UDP port on which to listen for datagrams and then proxy to the destination",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                                                        }
                                                    ],
                                                    "schema_definition": "int64validator.Between(1, 65535)"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "description": "UdpProxySpec defines the desired state of UdpProxy"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "UdpProxyStatus defines the observed state of UdpProxy"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the UdpProxy"
                        }
                    }
                ]
            }
        },
        {
            "name": "workflow_definition",
            "schema": {
                "attributes": [
                    {
                        "name": "api_version",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "core.eda.nokia.com/v1"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^core\\\\.eda\\\\.nokia\\\\.com/v1$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "default": {
                                "static": "WorkflowDefinition"
                            },
                            "validators": [
                                {
                                    "custom": {
                                        "imports": [
                                            {
                                                "path": "regexp"
                                            },
                                            {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                            }
                                        ],
                                        "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^WorkflowDefinition$\"), \"\")"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "metadata",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "annotations",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "labels",
                                    "map": {
                                        "computed_optional_required": "computed_optional",
                                        "element_type": {
                                            "string": {}
                                        }
                                    }
                                },
                                {
                                    "name": "name",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "validators": [
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.LengthAtMost(253)"
                                                }
                                            },
                                            {
                                                "custom": {
                                                    "imports": [
                                                        {
                                                            "path": "regexp"
                                                        },
                                                        {
                                                            "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                        }
                                                    ],
                                                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"), \"\")"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "spec",
                        "single_nested": {
                            "computed_optional_required": "required",
                            "attributes": [
                                {
                                    "name": "flow_definition_resource",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "group",
                                                "string": {
                                                    "computed_optional_required": "optional"
                                                }
                                            },
                                            {
                                                "name": "kind",
                                                "string": {
                                                    "computed_optional_required": "required"
                                                }
                                            },
                                            {
                                                "name": "version",
                                                "string": {
                                                    "computed_optional_required": "required"
                                                }
                                            }
                                        ],
                                        "description": "the resource type to be used for this flow, can only be set if Schema is not set"
                                    }
                                },
                                {
                                    "name": "flow_definition_schema",
                                    "single_nested": {
                                        "computed_optional_required": "optional",
                                        "attributes": [
                                            {
                                                "name": "json_schema_spec",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "A string containing the JSON schema the workflow accepts as input."
                                                }
                                            },
                                            {
                                                "name": "json_schema_status",
                                                "string": {
                                                    "computed_optional_required": "optional",
                                                    "description": "A string containing the JSON schema the workflow will populate as output."
                                                }
                                            }
                                        ],
                                        "description": "the schema for the flow, can only be set if Resource is not set"
                                    }
                                },
                                {
                                    "name": "image",
                                    "string": {
                                        "computed_optional_required": "required",
                                        "description": "Container image containing the flow. For example \"ghcr.io/nokia-eda/apps/operatingsystem:v1.0.0\"."
                                    }
                                },
                                {
                                    "name": "image_pull_secrets",
                                    "list": {
                                        "computed_optional_required": "optional",
                                        "element_type": {
                                            "string": {}
                                        },
                                        "description": "Secrets to use to pull the image for this workflow."
                                    }
                                },
                                {
                                    "name": "namespaced",
                                    "bool": {
                                        "computed_optional_required": "computed_optional",
                                        "default": {
                                            "static": true
                                        },
                                        "description": "If set, resources of this CRD are namespace scoped"
                                    }
                                }
                            ],
                            "description": "WorkflowDefinitionSpec defines the desired state of FlowDefinition"
                        }
                    },
                    {
                        "name": "status",
                        "single_nested": {
                            "computed_optional_required": "computed_optional",
                            "description": "WorkflowDefinitionStatus defines the observed state of FlowDefinition"
                        }
                    },
                    {
                        "name": "name",
                        "string": {
                            "computed_optional_required": "computed_optional",
                            "description": "name of the WorkflowDefinition"
                        }
                    }
                ]
            }
        }
    ],
    "version": "0.1"
}
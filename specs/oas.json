{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "WorkflowGetInputsRespElem": {
        "properties": {
          "ackPrompt": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "schemaPrompt": {
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowId": {
        "properties": {
          "id": {
            "description": "A workflow identifier; these are assigned by the system to a posted workflow.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkflowIdentifier": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowInputData": {
        "items": {
          "$ref": "#/components/schemas/WorkflowInputDataElem"
        },
        "type": "array"
      },
      "WorkflowInputDataElem": {
        "properties": {
          "ack": {
            "description": "acknowledge or reject the input request",
            "type": "boolean"
          },
          "input": {
            "description": "provide a json blob to the workflow",
            "type": "object"
          },
          "subflow": {
            "$ref": "#/components/schemas/WorkflowIdentifier"
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.ClusterRole": {
        "description": "ClusterRole is the Schema for the clusterroles API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterRole",
            "pattern": "^ClusterRole$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterRole",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole_metadata"
          },
          "spec": {
            "description": "ClusterRole defines a set of permissions to access EDA resources.\nClusterRoles and users are bound via groups, selecting a set of users and a set of ClusterRoles to bind.",
            "properties": {
              "description": {
                "description": "A description for the role.",
                "title": "Description",
                "type": "string"
              },
              "resourceRules": {
                "description": "Rules for access to resources.",
                "items": {
                  "description": "A role rule controlling access to a kubernetes resource.",
                  "properties": {
                    "apiGroups": {
                      "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "title": "API Groups",
                      "type": "array"
                    },
                    "permissions": {
                      "description": "Permissions for resources specified by the rule.",
                      "enum": [
                        "none",
                        "read",
                        "readWrite"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    },
                    "resources": {
                      "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "title": "Resources",
                      "type": "array"
                    }
                  },
                  "required": [
                    "apiGroups",
                    "permissions",
                    "resources"
                  ],
                  "type": "object"
                },
                "title": "Resource Rules",
                "type": "array"
              },
              "tableRules": {
                "description": "Rules for access to EDB tables, including via EQL.",
                "items": {
                  "description": "A role rule controlling access to a EDB table.  Note that\nthere is never write access to EDB.",
                  "properties": {
                    "path": {
                      "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches.",
                      "minLength": 1,
                      "pattern": "^\\..*",
                      "title": "Path",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "Permissions for the given EDB path.",
                      "enum": [
                        "none",
                        "read"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "permissions"
                  ],
                  "type": "object"
                },
                "title": "Table Rules",
                "type": "array"
              },
              "urlRules": {
                "description": "Rules for access to APIServer proxied routes.",
                "items": {
                  "description": "A role rule controlling access to an API server proxy.",
                  "properties": {
                    "path": {
                      "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches.",
                      "minLength": 1,
                      "pattern": "^/.*",
                      "title": "Path",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "The permissions for the API server URL for the rule.",
                      "enum": [
                        "none",
                        "read",
                        "readWrite"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "permissions"
                  ],
                  "type": "object"
                },
                "title": "URL Rules",
                "type": "array"
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "RoleStatus defines the observed state of Role",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.ClusterRoleList": {
        "description": "ClusterRoleList is a list of clusterroles",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.ClusterRole_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.ClusterRole_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.ClusterRole_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "ClusterRole",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.Deviation": {
        "description": "Deviation is the Schema for the deviations API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Deviation",
            "pattern": "^Deviation$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Deviation",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.Deviation_metadata"
          },
          "spec": {
            "description": "Deviations are used to represent differences between the intended and actual state of a target.\nThey indicate the intended state - or the computed configuration EDA expects, and compare this to the actual or running state, or the configuration retrieved from the target.\nDeviations are most often generated by out-of-band changes to a target by an external system or user, and\ncan be accepted or rejected. Rejecting a Deviation will result in the intended configuration being re-applied, undoing the out-of-band change.\nDeviations are raised per table, meaning a single change on a target may result in more than one Deviation.",
            "properties": {
              "accepted": {
                "description": "Indicates whether this Deviation has been accepted.",
                "title": "Accepted",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-category": "targetaccepted",
                  "ui-column-span": 2,
                  "ui-order-priority": 20,
                  "ui-single-line-group": "targetaccepted"
                }
              },
              "associatedCrs": {
                "description": "Resources impacted by this Deviation.",
                "items": {
                  "properties": {
                    "groupVersion": {
                      "description": "Group and version of the resource.",
                      "title": "Group + Version",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the resource.",
                      "title": "Kind",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the resource.",
                      "title": "Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupVersion",
                    "kind",
                    "name"
                  ],
                  "type": "object"
                },
                "title": "Associated Resources",
                "type": "array"
              },
              "intendedValues": {
                "description": "JSON object containing intended values of fields at the specified path.",
                "format": "json",
                "title": "Intended Values",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "values",
                  "ui-column-span": 2,
                  "ui-order-priority": 40,
                  "ui-single-line-group": "values"
                }
              },
              "nodeEndpoint": {
                "description": "Target on which this Deviation is present.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "targetaccepted",
                  "ui-column-span": 2,
                  "ui-order-priority": 10,
                  "ui-single-line-group": "targetaccepted"
                }
              },
              "operation": {
                "description": "Indicates the operation in this Deviation.",
                "enum": [
                  "create",
                  "delete"
                ],
                "title": "Operation",
                "type": "string"
              },
              "path": {
                "description": "Path on the target this Deviation is present at. This path is relative to the target's root, without any EDA prefixes - for example \".system\" rather than \".namespace.node.srl.system\".",
                "title": "Path",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 30
                }
              },
              "runningValues": {
                "description": "JSON object containing running values of fields at the specified path.",
                "format": "json",
                "title": "Running Values",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "values",
                  "ui-column-span": 2,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "values"
                }
              }
            },
            "required": [
              "nodeEndpoint",
              "operation",
              "path"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "DeviationStatus defines the observed state of Deviation",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.DeviationAction": {
        "description": "DeviationAction is the Schema for the deviationactions API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "DeviationAction",
            "pattern": "^DeviationAction$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to DeviationAction",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction_metadata"
          },
          "spec": {
            "description": "DeviationAction allows manual and API-driven actions to be performed on Deviation resources.\nThey are the only means to which and end user can accept or reject deviations, as Deviation resources themselves are read only.",
            "properties": {
              "actions": {
                "description": "The set of actions to perform on the target.",
                "items": {
                  "properties": {
                    "action": {
                      "description": "Action to perform on matching Deviations.",
                      "enum": [
                        "setAccept",
                        "clearAccept",
                        "reject"
                      ],
                      "title": "Action",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "PathAction"
                      }
                    },
                    "path": {
                      "description": "Path to match Deviation resources on this target. Only one action is allowed per path.",
                      "title": "Path",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 3,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "PathAction",
                        "ui-unique-key": true
                      }
                    },
                    "recurse": {
                      "description": "Recursively accept/reject Deviations from the specified path.",
                      "title": "Recurse",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "action",
                    "path"
                  ],
                  "type": "object"
                },
                "title": "Actions",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "nodeEndpoint": {
                "description": "The target on which this action is to be performed.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "actions",
              "nodeEndpoint"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "DeviationActionStatus defines the observed state of DeviationAction",
            "properties": {
              "result": {
                "description": "The result of the set of actions.",
                "enum": [
                  "OK",
                  "Failed"
                ],
                "title": "Result",
                "type": "string"
              },
              "transactionId": {
                "description": "The transaction id these actions were part of.",
                "title": "Transaction Id",
                "type": "integer"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.DeviationActionList": {
        "description": "DeviationActionList is a list of deviationactions",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.DeviationAction_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.DeviationAction_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.DeviationAction_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "DeviationAction",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.DeviationList": {
        "description": "DeviationList is a list of deviations",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.Deviation"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.Deviation_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "Deviation",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.EdgeInterface": {
        "description": "EdgeInterface is the Schema for the edgeinterfaces API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "EdgeInterface",
            "pattern": "^EdgeInterface$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to EdgeInterface",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface_metadata"
          },
          "spec": {
            "description": "EdgeInterfaceSpec defines the desired state of EdgeInterface",
            "properties": {
              "bridgeDomain": {
                "description": "Reference to a Bridge Domain",
                "title": "bridgeDomain",
                "type": "string"
              },
              "encapType": {
                "default": "null",
                "description": "Indicates if the EdgeInterface uses VLAN tagging",
                "enum": [
                  "null",
                  "dot1q"
                ],
                "title": "Encapsulation",
                "type": "string"
              },
              "gatewayIPV4Addresses": {
                "description": "List of gateway IPv4 addresses in ip/mask form - e.g. 192.168.0.1/24",
                "items": {
                  "properties": {
                    "ipPrefix": {
                      "description": "Address and mask to use",
                      "title": "IP Prefix",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-unique-key": true
                      }
                    },
                    "primary": {
                      "description": "Indicates which address to use as primary for broadcast",
                      "title": "Primary",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ipPrefix"
                  ],
                  "type": "object"
                },
                "title": "Gateway IPv4 Addresses",
                "type": "array"
              },
              "gatewayIPV6Addresses": {
                "description": "List of gateway IPv6 addresses in ip/mask form - e.g. fc00::1/120",
                "items": {
                  "properties": {
                    "ipPrefix": {
                      "description": "Address and mask to use",
                      "title": "IP Prefix",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-unique-key": true
                      }
                    },
                    "primary": {
                      "description": "Indicates which address to use as primary for broadcast",
                      "title": "Primary",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ipPrefix"
                  ],
                  "type": "object"
                },
                "title": "Gateway IPv6 Addresses",
                "type": "array"
              },
              "interfaceResource": {
                "description": "Reference to an interface",
                "title": "Interface Resource",
                "type": "string"
              },
              "router": {
                "description": "Reference to a Router",
                "title": "Router",
                "type": "string"
              },
              "vlanID": {
                "description": "Single value between 0-4094 supported",
                "maximum": 4094,
                "minimum": 0,
                "title": "VLAN ID",
                "type": "integer"
              }
            },
            "required": [
              "encapType",
              "interfaceResource"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "EdgeInterfaceStatus defines the observed state of EdgeInterface",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.EdgeInterfaceList": {
        "description": "EdgeInterfaceList is a list of edgeinterfaces",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.EdgeInterface_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.EdgeInterface_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.EdgeInterface_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "EdgeInterface",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.HttpProxy": {
        "description": "HttpProxy is the Schema for the httpproxies API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "HttpProxy",
            "pattern": "^HttpProxy$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to HttpProxy",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy_metadata"
          },
          "spec": {
            "description": "HttpProxySpec defines the desired state of HttpProxy",
            "properties": {
              "authType": {
                "description": "Determines where authentication happens.\nIf \"atDestination\", then no authentication happens in API server and any auth tokens are forwarded as is.\nIf \"inApiServer\", then authentication happens within the API server and auth tokens are stripped prior to forwarding.",
                "enum": [
                  "atDestination",
                  "inApiServer"
                ],
                "title": "Authentication Type",
                "type": "string"
              },
              "rootUrl": {
                "description": "The proxy destination, including the protocol.",
                "title": "Git",
                "type": "string"
              }
            },
            "required": [
              "authType",
              "rootUrl"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "HttpProxyStatus defines the observed state of HttpProxy",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.HttpProxyList": {
        "description": "HttpProxyList is a list of httpproxies",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.HttpProxy_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.HttpProxy_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.HttpProxy_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "HttpProxy",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.IPAllocationPool": {
        "description": "IPAllocationPool is the Schema for the ipallocationpools API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "IPAllocationPool",
            "pattern": "^IPAllocationPool$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to IPAllocationPool",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool_metadata"
          },
          "spec": {
            "description": "IPAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPInSubnetAllocationPool in that it returns a single unzoned IP address, i.e. an IP address without a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1.\nConsult application documentation to know which pool type to use for a given use case.",
            "properties": {
              "publishAllocations": {
                "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of.",
                "title": "Publish Allocations",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2
                }
              },
              "segments": {
                "description": "List of segments containing IPv4 or IPv6 addresses to allocate.",
                "items": {
                  "properties": {
                    "allocateBroadcastAddress": {
                      "description": "Permit the allocation of the broadcast address.",
                      "title": "Allocate Broadcast Address",
                      "type": "boolean"
                    },
                    "allocateNetworkAddress": {
                      "description": "Permit the allocation of the network address.",
                      "title": "Allocate Network Address",
                      "type": "boolean"
                    },
                    "allocations": {
                      "description": "List of reservations to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of this allocation.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Allocation",
                              "ui-unique-key": true
                            }
                          },
                          "value": {
                            "description": "Allocation to reserve.",
                            "title": "Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Allocation"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "title": "Allocations",
                      "type": "array"
                    },
                    "reservations": {
                      "description": "List of ranges to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "end": {
                            "description": "Value to reserve to.",
                            "title": "End",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Reservation"
                            }
                          },
                          "start": {
                            "description": "Value to start reserving.",
                            "title": "Start",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Reservation"
                            }
                          }
                        },
                        "required": [
                          "end",
                          "start"
                        ],
                        "type": "object"
                      },
                      "title": "Reservations",
                      "type": "array"
                    },
                    "subnet": {
                      "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24.",
                      "title": "Subnet",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-unique-key": true
                      }
                    }
                  },
                  "required": [
                    "subnet"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "title": "Segments",
                "type": "array"
              }
            },
            "required": [
              "segments"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "IPAllocationPoolStatus defines the observed state of IPAllocationPool",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPAllocationPoolList": {
        "description": "IPAllocationPoolList is a list of ipallocationpools",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPAllocationPool_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPAllocationPool_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.IPAllocationPool_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "IPAllocationPool",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.IPInSubnetAllocationPool": {
        "description": "IPInSubnetAllocationPool is the Schema for the ipinsubnetallocationpools API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "IPInSubnetAllocationPool",
            "pattern": "^IPInSubnetAllocationPool$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to IPInSubnetAllocationPool",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool_metadata"
          },
          "spec": {
            "description": "IPInSubnetAllocationPool is a generic IP allocation pool supporting allocation of IPv4 and/or IPv6 addresses from a set of segments.\nIt is different from IPAllocationPool in that it returns a single zoned IP address, i.e. an IP address with a subnet. For example a 10.1.1.0/24 segment could return 10.1.1.1/24.\nConsult application documentation to know which pool type to use for a given use case.",
            "properties": {
              "publishAllocations": {
                "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of.",
                "title": "Publish Allocations",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2
                }
              },
              "segments": {
                "description": "List of segments containing IPv4 or IPv6 addresses to allocate.",
                "items": {
                  "properties": {
                    "allocateBroadcastAddress": {
                      "description": "Permit the allocation of the broadcast address.",
                      "title": "Allocate Broadcast Address",
                      "type": "boolean"
                    },
                    "allocateNetworkAddress": {
                      "description": "Permit the allocation of the network address.",
                      "title": "Allocate Network Address",
                      "type": "boolean"
                    },
                    "allocations": {
                      "description": "List of reservations to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of this allocation.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Allocation",
                              "ui-unique-key": true
                            }
                          },
                          "value": {
                            "description": "Allocation to reserve.",
                            "title": "Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Allocation"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "title": "Allocations",
                      "type": "array"
                    },
                    "reservations": {
                      "description": "List of ranges to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "end": {
                            "description": "Value to reserve to.",
                            "title": "End",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Reservation"
                            }
                          },
                          "start": {
                            "description": "Value to start reserving.",
                            "title": "Start",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Reservation"
                            }
                          }
                        },
                        "required": [
                          "end",
                          "start"
                        ],
                        "type": "object"
                      },
                      "title": "Reservations",
                      "type": "array"
                    },
                    "subnet": {
                      "description": "IPv4 or IPv6 subnet, e.g. 10.1.1.0/24.",
                      "title": "Subnet",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-unique-key": true
                      }
                    }
                  },
                  "required": [
                    "subnet"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "title": "Segments",
                "type": "array"
              }
            },
            "required": [
              "segments"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "IPInSubnetAllocationPoolStatus defines the observed state of IPInSubnetAllocationPool",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPInSubnetAllocationPoolList": {
        "description": "IPInSubnetAllocationPoolList is a list of ipinsubnetallocationpools",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPInSubnetAllocationPool_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.IPInSubnetAllocationPool_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.IPInSubnetAllocationPool_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "IPInSubnetAllocationPool",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.IndexAllocationPool": {
        "description": "IndexAllocationPool is the Schema for the indexallocationpools API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "IndexAllocationPool",
            "pattern": "^IndexAllocationPool$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to IndexAllocationPool",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool_metadata"
          },
          "spec": {
            "description": "IndexAllocationPool is a generic allocation pool supporting allocation of indexes from a set of segments.\nIt supports allocating things like VLANs, subinterface indexes, autonomous system numbers, or any other integer-based index.",
            "properties": {
              "publishAllocations": {
                "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of.",
                "title": "Publish Allocations",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2
                }
              },
              "segments": {
                "description": "List of segments containing indexes to allocate.",
                "items": {
                  "properties": {
                    "allocations": {
                      "description": "List of reservations to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of this allocation.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Allocation",
                              "ui-unique-key": true
                            }
                          },
                          "value": {
                            "description": "Index to reserve.",
                            "format": "int32",
                            "title": "Value",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Allocation"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "title": "Allocations",
                      "type": "array"
                    },
                    "reservations": {
                      "description": "Range of reservations to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "end": {
                            "description": "Value to reserve to.",
                            "format": "int32",
                            "title": "End",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Reservation"
                            }
                          },
                          "start": {
                            "description": "Value to start reserving.",
                            "format": "int32",
                            "title": "Start",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Reservation"
                            }
                          }
                        },
                        "required": [
                          "end",
                          "start"
                        ],
                        "type": "object"
                      },
                      "title": "Reservations",
                      "type": "array"
                    },
                    "size": {
                      "description": "Number of elements in the segment.",
                      "format": "int32",
                      "title": "Size",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-category": "Segment",
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "Segment"
                      }
                    },
                    "start": {
                      "description": "Starting value of the segment.",
                      "format": "int32",
                      "title": "Start",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-category": "Segment",
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "Segment"
                      }
                    }
                  },
                  "required": [
                    "size",
                    "start"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "title": "Segments",
                "type": "array"
              }
            },
            "required": [
              "segments"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "IndexAllocationPoolStatus defines the observed state of IndexAllocationPool",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IndexAllocationPoolList": {
        "description": "IndexAllocationPoolList is a list of indexallocationpools",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.IndexAllocationPool_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.IndexAllocationPool_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.IndexAllocationPool_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "IndexAllocationPool",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.License": {
        "description": "License is the Schema for the licenses API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "License",
            "pattern": "^License$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to License",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.License_metadata"
          },
          "spec": {
            "description": "A License represents an application license providing functionality within EDA. A license providing the \"base\" feature must be provided/valid for transactions to be processed.",
            "properties": {
              "data": {
                "description": "The license key. This is a base64 encoded string.",
                "title": "Data",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 200
                }
              },
              "enabled": {
                "default": true,
                "description": "Indicates if this license is available for use.",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "data"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "Status information for this license.",
            "properties": {
              "comment": {
                "description": "Any comment provided in the license.",
                "title": "Comment",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 600
                }
              },
              "expirationDate": {
                "description": "Date and time the license expires.",
                "format": "date",
                "title": "Expiration Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Expiration"
                }
              },
              "expired": {
                "description": "Indicates if the license has expired.",
                "title": "Expired",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Expiration"
                }
              },
              "issuedDate": {
                "description": "Date and time the license was issued.",
                "format": "date",
                "title": "Issued Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 300
                }
              },
              "used": {
                "description": "Indicates if license has been used.",
                "title": "Used",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "ValidUsed"
                }
              },
              "valid": {
                "description": "Indicates if the license is valid.",
                "title": "Valid",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "ValidUsed"
                }
              }
            },
            "readOnly": true,
            "required": [
              "expired",
              "used",
              "valid"
            ],
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.LicenseList": {
        "description": "LicenseList is a list of licenses",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.License"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.License_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "License",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.Namespace": {
        "description": "Namespace is the Schema for the namespaces API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Namespace",
            "pattern": "^Namespace$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Namespace",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace_metadata"
          },
          "spec": {
            "description": "A Namespace is a logical partition within the cluster that provides a mechanism for isolating resources.\nNamespaces allow for resource segmentation, enabling multiple teams or applications to share the same cluster without conflict.",
            "properties": {
              "description": {
                "description": "An optional description of the use of the namespace.",
                "title": "Description",
                "type": "string"
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "NamespaceStatus defines the observed state of Namespace",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.NamespaceList": {
        "description": "NamespaceList is a list of namespaces",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.Namespace_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.Namespace_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.Namespace_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "Namespace",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.NodeProfile": {
        "description": "NodeProfile is the Schema for the nodeprofiles API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "NodeProfile",
            "pattern": "^NodeProfile$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to NodeProfile",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile_metadata"
          },
          "spec": {
            "description": "NodeProfileSpec defines the desired state of NodeProfile",
            "properties": {
              "annotate": {
                "default": false,
                "description": "Indicates if NPP should annotate sent configuration.",
                "title": "Annotations",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 2900
                }
              },
              "containerImage": {
                "description": "Container image to use when simulating TopoNodes referencing this NodeProfile, e.g. ghcr.io/nokia/srlinux:24.7.1.",
                "title": "Container Image",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2200,
                  "ui-single-line-group": "ContainerImage"
                }
              },
              "dhcp": {
                "description": "DHCP options to use when onboarding the TopoNode. Optional if not bootstrapping using EDA.",
                "properties": {
                  "dhcp4Options": {
                    "description": "DHCPv4 options to return to TopoNodes referencing this NodeProfile.",
                    "items": {
                      "properties": {
                        "option": {
                          "description": "DHCPv4 option to return to the TopoNode.",
                          "enum": [
                            "1-SubnetMask",
                            "2-TimeOffset",
                            "3-Router",
                            "4-TimeServer",
                            "5-NameServer",
                            "6-DomainNameServer",
                            "7-LogServer",
                            "8-QuoteServer",
                            "9-LPRServer",
                            "10-ImpressServer",
                            "11-ResourceLocationServer",
                            "12-HostName",
                            "13-BootFileSize",
                            "14-MeritDumpFile",
                            "15-DomainName",
                            "16-SwapServer",
                            "17-RootPath",
                            "18-ExtensionsPath",
                            "19-IPForwarding",
                            "20-NonLocalSourceRouting",
                            "21-PolicyFilter",
                            "22-MaximumDatagramAssemblySize",
                            "23-DefaultIPTTL",
                            "24-PathMTUAgingTimeout",
                            "25-PathMTUPlateauTable",
                            "26-InterfaceMTU",
                            "27-AllSubnetsAreLocal",
                            "28-BroadcastAddress",
                            "29-PerformMaskDiscovery",
                            "30-MaskSupplier",
                            "31-PerformRouterDiscovery",
                            "32-RouterSolicitationAddress",
                            "33-StaticRoutingTable",
                            "34-TrailerEncapsulation",
                            "35-ArpCacheTimeout",
                            "36-EthernetEncapsulation",
                            "37-DefaulTCPTTL",
                            "38-TCPKeepaliveInterval",
                            "39-TCPKeepaliveGarbage",
                            "40-NetworkInformationServiceDomain",
                            "41-NetworkInformationServers",
                            "42-NTPServers",
                            "43-VendorSpecificInformation",
                            "44-NetBIOSOverTCPIPNameServer",
                            "45-NetBIOSOverTCPIPDatagramDistributionServer",
                            "46-NetBIOSOverTCPIPNodeType",
                            "47-NetBIOSOverTCPIPScope",
                            "48-XWindowSystemFontServer",
                            "49-XWindowSystemDisplayManager",
                            "50-RequestedIPAddress",
                            "51-IPAddressLeaseTime",
                            "52-OptionOverload",
                            "53-DHCPMessageType",
                            "54-ServerIdentifier",
                            "55-ParameterRequestList",
                            "56-Message",
                            "57-MaximumDHCPMessageSize",
                            "58-RenewTimeValue",
                            "59-RebindingTimeValue",
                            "60-ClassIdentifier",
                            "61-ClientIdentifier",
                            "62-NetWareIPDomainName",
                            "63-NetWareIPInformation",
                            "64-NetworkInformationServicePlusDomain",
                            "65-NetworkInformationServicePlusServers",
                            "66-TFTPServerName",
                            "67-BootfileName",
                            "68-MobileIPHomeAgent",
                            "69-SimpleMailTransportProtocolServer",
                            "70-PostOfficeProtocolServer",
                            "71-NetworkNewsTransportProtocolServer",
                            "72-DefaultWorldWideWebServer",
                            "73-DefaultFingerServer",
                            "74-DefaultInternetRelayChatServer",
                            "75-StreetTalkServer",
                            "76-StreetTalkDirectoryAssistanceServer",
                            "77-UserClassInformation",
                            "78-SLPDirectoryAgent",
                            "79-SLPServiceScope",
                            "80-RapidCommit",
                            "81-FQDN",
                            "82-RelayAgentInformation",
                            "83-InternetStorageNameService",
                            "85-NDSServers",
                            "86-NDSTreeName",
                            "87-NDSContext",
                            "88-BCMCSControllerDomainNameList",
                            "89-BCMCSControllerIPv4AddressList",
                            "90-Authentication",
                            "91-ClientLastTransactionTime",
                            "92-AssociatedIP",
                            "93-ClientSystemArchitectureType",
                            "94-ClientNetworkInterfaceIdentifier",
                            "95-LDAP",
                            "97-ClientMachineIdentifier",
                            "98-OpenGroupUserAuthentication",
                            "99-GeoConfCivic",
                            "100-IEEE10031TZString",
                            "101-ReferenceToTZDatabase",
                            "112-NetInfoParentServerAddress",
                            "113-NetInfoParentServerTag",
                            "114-URL",
                            "116-AutoConfigure",
                            "117-NameServiceSearch",
                            "118-SubnetSelection",
                            "119-DNSDomainSearchList",
                            "120-SIPServers",
                            "121-ClasslessStaticRoute",
                            "122-CCC",
                            "123-GeoConf",
                            "124-VendorIdentifyingVendorClass",
                            "125-VendorIdentifyingVendorSpecific",
                            "128-TFTPServerIPAddress",
                            "129-CallServerIPAddress",
                            "130-DiscriminationString",
                            "131-RemoteStatisticsServerIPAddress",
                            "132-8021PVLANID",
                            "133-8021QL2Priority",
                            "134-DiffservCodePoint",
                            "135-HTTPProxyForPhoneSpecificApplications",
                            "136-PANAAuthenticationAgent",
                            "137-LoSTServer",
                            "138-CAPWAPAccessControllerAddresses",
                            "139-OPTIONIPv4AddressMoS",
                            "140-OPTIONIPv4FQDNMoS",
                            "141-SIPUAConfigurationServiceDomains",
                            "142-OPTIONIPv4AddressANDSF",
                            "143-OPTIONIPv6AddressANDSF",
                            "150-TFTPServerAddress",
                            "151-StatusCode",
                            "152-BaseTime",
                            "153-StartTimeOfState",
                            "154-QueryStartTime",
                            "155-QueryEndTime",
                            "156-DHCPState",
                            "157-DataSource",
                            "175-Etherboot",
                            "176-IPTelephone",
                            "177-EtherbootPacketCableAndCableHome",
                            "208-PXELinuxMagicString",
                            "209-PXELinuxConfigFile",
                            "210-PXELinuxPathPrefix",
                            "211-PXELinuxRebootTime",
                            "212-OPTION6RD",
                            "213-OPTIONv4AccessDomain",
                            "220-SubnetAllocation",
                            "221-VirtualSubnetAllocation",
                            "224-Reserved",
                            "225-Reserved",
                            "226-Reserved",
                            "227-Reserved",
                            "228-Reserved",
                            "229-Reserved",
                            "230-Reserved",
                            "231-Reserved",
                            "232-Reserved",
                            "233-Reserved",
                            "234-Reserved",
                            "235-Reserved",
                            "236-Reserved",
                            "237-Reserved",
                            "238-Reserved",
                            "239-Reserved",
                            "240-Reserved",
                            "241-Reserved",
                            "242-Reserved",
                            "243-Reserved",
                            "244-Reserved",
                            "245-Reserved",
                            "246-Reserved",
                            "247-Reserved",
                            "248-Reserved",
                            "249-Reserved",
                            "250-Reserved",
                            "251-Reserved",
                            "252-Reserved",
                            "253-Reserved",
                            "254-Reserved",
                            "255-End"
                          ],
                          "title": "Option",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1410
                          }
                        },
                        "value": {
                          "description": "Value to return to the TopoNode for the specified option.",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "title": "Value",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1420
                          }
                        }
                      },
                      "required": [
                        "option",
                        "value"
                      ],
                      "type": "object"
                    },
                    "title": "DHCPv4 Options",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 1400
                    }
                  },
                  "dhcp6Options": {
                    "description": "DHCPv6 options to return to TopoNodes referencing this NodeProfile.",
                    "items": {
                      "properties": {
                        "option": {
                          "description": "DHCPv6 option to return to the TopoNode.",
                          "enum": [
                            "59-BootfileUrl"
                          ],
                          "title": "Option",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1510
                          }
                        },
                        "value": {
                          "description": "Value to return to the TopoNode for the specified option.",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "title": "Value",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1520
                          }
                        }
                      },
                      "required": [
                        "option",
                        "value"
                      ],
                      "type": "object"
                    },
                    "title": "DHCPv6 Options",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 1500
                    }
                  },
                  "managementPoolv4": {
                    "description": "IPInSubnetAllocationPool to use for IPv4 allocations of the management address for TopoNodes referencing this NodeProfile.",
                    "title": "Management Pool - IPv4",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipinsubnetallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 1200,
                      "ui-single-line-group": "ManagementPools"
                    }
                  },
                  "managementPoolv6": {
                    "description": "IPInSubnetAllocationPool to use for IPv6 allocations of the management address for TopoNodes referencing this NodeProfile.",
                    "title": "Management Pool - IPv6",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipinsubnetallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 1300,
                      "ui-single-line-group": "ManagementPools"
                    }
                  },
                  "preferredAddressFamily": {
                    "description": "Preferred IP address family",
                    "enum": [
                      "IPv4",
                      "IPv6"
                    ],
                    "title": "Preferred Address Family",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 1100
                    }
                  }
                },
                "title": "DHCP",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1000
                }
              },
              "imagePullSecret": {
                "description": "Secret used to authenticate to the container registry where the container image is hosted.",
                "title": "Image Pull Secret",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2200,
                  "ui-single-line-group": "ContainerImage"
                }
              },
              "images": {
                "description": "URLs hosting software images for bootstrapping TopoNodes referencing this NodeProfile.",
                "items": {
                  "properties": {
                    "image": {
                      "description": "URL hosting the software image, e.g. srlimages/srlinux-24.7.1.bin.",
                      "title": "Image",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 800,
                        "ui-unique-key": true
                      }
                    },
                    "imageMd5": {
                      "description": "URL hosting the software image md5 hash. e.g. srlimages/srlinux-24.7.1.bin.md5.",
                      "title": "Image MD5",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 900
                      }
                    }
                  },
                  "required": [
                    "image"
                  ],
                  "type": "object"
                },
                "title": "Images",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 700
                }
              },
              "license": {
                "description": "ConfigMap containing a license for TopoNodes referencing this NodeProfile.",
                "title": "License",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2400
                }
              },
              "llmDb": {
                "description": "URL containing LLDB  to use when interacting with LLM-DB and OpenAI for query autocompletion, e.g. http://eda-asvr/llmdb/ce-llm-db-srlinux-24.7.1.tar.gz.",
                "title": "LLMDB",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "LLMDB"
                }
              },
              "nodeUser": {
                "description": "Reference to a NodeUser to use for authentication to TopoNodes referencing this NodeProfile.",
                "title": "Node User",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "nodeusers",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "NodeUserYang"
                }
              },
              "onboardingPassword": {
                "default": "NokiaSrl1!",
                "description": "The password to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin.",
                "format": "password",
                "title": "Onboarding Password",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1600,
                  "ui-single-line-group": "OnboardingUsernamePassword"
                }
              },
              "onboardingUsername": {
                "default": "admin",
                "description": "The username to use when onboarding TopoNodes referencing this NodeProfile, e.g. admin.",
                "title": "Onboarding Username",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1600,
                  "ui-single-line-group": "OnboardingUsernamePassword"
                }
              },
              "operatingSystem": {
                "description": "Sets the operating system of this NodeProfile, e.g. srl.",
                "enum": [
                  "srl",
                  "sros",
                  "eos",
                  "sonic",
                  "ios-xr",
                  "nxos",
                  "linux"
                ],
                "title": "Operating System",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "OperatingSystemVersion"
                }
              },
              "platformPath": {
                "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.type.",
                "title": "Platform Path",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2000,
                  "ui-single-line-group": "SerialPlatformPath"
                }
              },
              "port": {
                "default": 57400,
                "description": "Port used to establish a connection to the TopoNode, e.g. 57400.",
                "maximum": 65535,
                "minimum": 1,
                "title": "Port",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "PortTransport"
                }
              },
              "serialNumberPath": {
                "description": "JSPath to use for retrieving the serial number string from TopoNodes referencing this NodeProfile, e.g. .platform.chassis.serial-number.",
                "title": "Serial Number Path",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2000,
                  "ui-single-line-group": "SerialPlatformPath"
                }
              },
              "version": {
                "description": "Sets the software version of this NodeProfile, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros).",
                "title": "Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "OperatingSystemVersion"
                }
              },
              "versionMatch": {
                "description": "Regular expression to match the node-retrieved version string to TopoNode version, e.g. v0\\.0\\.0.*.",
                "title": "Version Match",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1800,
                  "ui-single-line-group": "Version"
                }
              },
              "versionPath": {
                "description": "JSPath to use for retrieving the version string from TopoNodes referencing this NodeProfile, e.g. .system.information.version.",
                "title": "Version Path",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1800,
                  "ui-single-line-group": "Version"
                }
              },
              "yang": {
                "description": "URL containing YANG modules and schema profile to use when interacting with TopoNodes referencing this NodeProfile, e.g. http://eda-asvr/schemaprofiles/srlinux-24.7.1.zip.",
                "title": "YANG",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "NodeUserYang"
                }
              }
            },
            "required": [
              "nodeUser",
              "onboardingPassword",
              "onboardingUsername",
              "operatingSystem",
              "version",
              "yang"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeProfileList": {
        "description": "NodeProfileList is a list of nodeprofiles",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeProfile_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeProfile_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.NodeProfile_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "NodeProfile",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.NodeUser": {
        "description": "NodeUser is the Schema for the nodeusers API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "NodeUser",
            "pattern": "^NodeUser$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to NodeUser",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser_metadata"
          },
          "spec": {
            "description": "The NodeUser resource represents a user that can be deployed to a set of TopoNodes. It supports managing the user's password, SSH keys, and group bindings.\nAdditionally a NodeUser is referenced by a NodeProfile to indicate how NPP should connect to TopoNodes.",
            "properties": {
              "groupBindings": {
                "description": "Matching of this user to node-specific permissions via groups.",
                "items": {
                  "properties": {
                    "groups": {
                      "description": "Assigned groups for this user.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Groups",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-auto-completes": [
                          {
                            "condition": "true",
                            "group": "aaa.eda.nokia.com",
                            "resource": "nodegroups",
                            "type": "gvr",
                            "version": "v1alpha1"
                          }
                        ]
                      }
                    },
                    "nodeSelector": {
                      "description": "Selector to use when selecting TopoNodes to deploy this user to.",
                      "format": "labelselector",
                      "items": {
                        "type": "string"
                      },
                      "title": "Node Selector",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-category": "Nodes",
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "Nodes"
                      }
                    },
                    "nodes": {
                      "description": " TopoNodes to deploy this user to.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Nodes",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-auto-completes": [
                          {
                            "condition": "true",
                            "group": "core.eda.nokia.com",
                            "resource": "toponodes",
                            "type": "gvr",
                            "version": "v1"
                          }
                        ],
                        "ui-category": "Nodes",
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "Nodes"
                      }
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "type": "object"
                },
                "title": "Group Bindings",
                "type": "array"
              },
              "password": {
                "description": "Password for this user.",
                "format": "password",
                "title": "Password",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "UsernamePassword",
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "UsernamePassword"
                }
              },
              "sshPublicKeys": {
                "description": "SSH public keys to deploy for the user.",
                "items": {
                  "type": "string"
                },
                "title": "SSH Public Keys",
                "type": "array"
              },
              "username": {
                "description": "Name of this user. If not provided, the name of the resource will be used.",
                "maxLength": 32,
                "title": "Username",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "UsernamePassword",
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "UsernamePassword"
                }
              }
            },
            "required": [
              "groupBindings",
              "password"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "Deployment status of this NodeUser.",
            "properties": {
              "groupBindings": {
                "description": "List of TopoNodes user has been deployed to, along with corresponding groups.",
                "items": {
                  "properties": {
                    "groups": {
                      "description": "Groups this user is a member of on this node.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Groups",
                      "type": "array"
                    },
                    "node": {
                      "description": "Node this user is deployed to.",
                      "title": "Node",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "Group Bindings",
                "type": "array"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeUserList": {
        "description": "NodeUserList is a list of nodeusers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeUser_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.NodeUser_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.NodeUser_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "NodeUser",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.Role": {
        "description": "Role is the Schema for the roles API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Role",
            "pattern": "^Role$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Role",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role_metadata"
          },
          "spec": {
            "description": "RoleSpec defines the desired state of Role",
            "properties": {
              "description": {
                "description": "A description for the role.",
                "title": "Description",
                "type": "string"
              },
              "resourceRules": {
                "description": "The rules for access to kubernetes resources",
                "items": {
                  "description": "A role rule controlling access to a kubernetes resource.",
                  "properties": {
                    "apiGroups": {
                      "description": "The API groups for the resources controlled by the rule.\nAn API group consists of an apiGroup and a version, e.g. \"apigroup/version\".\nThe API group can be a wildcard (\"*\"), in which case it will match any API group.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "title": "API Groups",
                      "type": "array"
                    },
                    "permissions": {
                      "description": "Permissions for resources specified by the rule.",
                      "enum": [
                        "none",
                        "read",
                        "readWrite"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    },
                    "resources": {
                      "description": "Names for the resources controlled by the rule.\nIt can be a wildcard (\"*\"), in which case it will match any resource\nin the matching API groups.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "title": "Resources",
                      "type": "array"
                    }
                  },
                  "required": [
                    "apiGroups",
                    "permissions",
                    "resources"
                  ],
                  "type": "object"
                },
                "title": "Resource Rules",
                "type": "array"
              },
              "tableRules": {
                "description": "The rules for access to the database tables.",
                "items": {
                  "description": "A role rule controlling access to a EDB table.  Note that\nthere is never write access to EDB.",
                  "properties": {
                    "path": {
                      "description": "EDB path to which this rule applies. It can end in \".*\"\nin which case the final portion of the table path can be anything, if the\nprefix matches. It can end in \".**\" in which case the table path can be\nanything if the prefix matches.",
                      "minLength": 1,
                      "pattern": "^\\..*",
                      "title": "Path",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "Permissions for the given EDB path.",
                      "enum": [
                        "none",
                        "read"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "permissions"
                  ],
                  "type": "object"
                },
                "title": "Table Rules",
                "type": "array"
              },
              "urlRules": {
                "description": "The rules for access to api-server proxied routes.",
                "items": {
                  "description": "A role rule controlling access to an API server proxy.",
                  "properties": {
                    "path": {
                      "description": "The API server URL path to which this rule applies. It can end in \"/*\"\nin which case the final portion of the URL path can be anything, if the\nprefix matches. It can end in \"/**\" in which case the URL path can be\nanything if the prefix matches.",
                      "minLength": 1,
                      "pattern": "^/.*",
                      "title": "Path",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "The permissions for the API server URL for the rule.",
                      "enum": [
                        "none",
                        "read",
                        "readWrite"
                      ],
                      "title": "Permissions",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "permissions"
                  ],
                  "type": "object"
                },
                "title": "URL Rules",
                "type": "array"
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "RoleStatus defines the observed state of Role",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.RoleList": {
        "description": "RoleList is a list of roles",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.Role_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.Role_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.Role_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "Role",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.SubnetAllocationPool": {
        "description": "SubnetAllocationPool is the Schema for the subnetallocationpools API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "SubnetAllocationPool",
            "pattern": "^SubnetAllocationPool$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to SubnetAllocationPool",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool_metadata"
          },
          "spec": {
            "description": "SubnetAllocationPool is a generic subnet allocation pool supporting allocation of IPv4 and/or IPv6 child subnets from a list of parent subnet segments.\nIt allocates a subnet of the configured length from the provided parent subnet.\nFor example a pool could return 10.1.0.8/29 when a segment is defined as subnet 10.1.0.0/16 with subnet length 29.\nConsult application documentation to know which pool type to use for a given use case.",
            "properties": {
              "publishAllocations": {
                "description": "If true, allocations in segments will be published to EDB, available to query via EQL and trigger state applications off of.",
                "title": "Publish Allocations",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2
                }
              },
              "segments": {
                "description": "List of segments containing subnets to allocate.",
                "items": {
                  "properties": {
                    "allocations": {
                      "description": "List of reservations to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of this allocation.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Allocation",
                              "ui-unique-key": true
                            }
                          },
                          "value": {
                            "description": "Allocation to reserve.",
                            "title": "Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Allocation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Allocation"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "type": "object"
                      },
                      "title": "Allocations",
                      "type": "array"
                    },
                    "reservations": {
                      "description": "List of ranges to exclude from allocations from this segment.",
                      "items": {
                        "properties": {
                          "end": {
                            "description": "Value to reserve to.",
                            "title": "End",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 200,
                              "ui-single-line-group": "Reservation"
                            }
                          },
                          "start": {
                            "description": "Value to start reserving.",
                            "title": "Start",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-category": "Reservation",
                              "ui-column-span": 2,
                              "ui-order-priority": 100,
                              "ui-single-line-group": "Reservation"
                            }
                          }
                        },
                        "required": [
                          "end",
                          "start"
                        ],
                        "type": "object"
                      },
                      "title": "Reservations",
                      "type": "array"
                    },
                    "subnet": {
                      "description": "IPv4 or IPv6 subnet to allocate subnets from, e.g. 10.1.0.0/16.",
                      "title": "Subnet",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-category": "Subnet",
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "Subnet"
                      }
                    },
                    "subnetLength": {
                      "description": "The size of the subnets to be allocated from within the parent subnet, e.g. 29 (which could allocate 10.1.0.8/29, for example).",
                      "format": "int32",
                      "title": "Subnet Length",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-category": "Subnet",
                        "ui-column-span": 1,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "Subnet"
                      }
                    }
                  },
                  "required": [
                    "subnet",
                    "subnetLength"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "title": "Segments",
                "type": "array"
              }
            },
            "required": [
              "segments"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "SubnetAllocationPoolStatus defines the observed state of SubnetAllocationPool",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.SubnetAllocationPoolList": {
        "description": "SubnetAllocationPoolList is a list of subnetallocationpools",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.SubnetAllocationPool_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.SubnetAllocationPool_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.SubnetAllocationPool_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "SubnetAllocationPool",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.TopoBreakout": {
        "description": "TopoBreakout is the Schema for the topobreakouts API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "TopoBreakout",
            "pattern": "^TopoBreakout$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to TopoBreakout",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout_metadata"
          },
          "spec": {
            "description": "TopoBreakoutSpec defines the desired state of TopoBreakout",
            "properties": {
              "channels": {
                "description": "The number of breakout channels to create",
                "maximum": 8,
                "minimum": 1,
                "title": "Number of Channels",
                "type": "integer"
              },
              "interface": {
                "description": "A list of normalized parent interface/port",
                "items": {
                  "type": "string"
                },
                "title": "Normalized Parent Interface",
                "type": "array"
              },
              "node": {
                "description": "Reference to a list of TopoNodes where the parent interfaces are to be broken out",
                "items": {
                  "type": "string"
                },
                "title": "Node",
                "type": "array"
              },
              "speed": {
                "description": "The speed of each breakout channel",
                "enum": [
                  "800G",
                  "400G",
                  "200G",
                  "100G",
                  "50G",
                  "40G",
                  "25G",
                  "10G"
                ],
                "title": "Speed",
                "type": "string"
              }
            },
            "required": [
              "channels",
              "node",
              "speed"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "TopoBreakoutStatus defines the observed state of TopoBreakout",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoBreakoutList": {
        "description": "TopoBreakoutList is a list of topobreakouts",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoBreakout_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoBreakout_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.TopoBreakout_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "TopoBreakout",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.TopoLink": {
        "description": "TopoLink is the Schema for the topolinks API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "TopoLink",
            "pattern": "^TopoLink$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to TopoLink",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink_metadata"
          },
          "spec": {
            "description": "TopoLink represents a logical link between two TopoNodes. It may include more than one physical link, being used to represent a LAG or multihomed link.\nTo create a point to point link with a single interface on both sides use a single link property.\nTo create a point to point link with a LAG configured on both side, use two links with matching nodes.\nA multihomed LAG is created by using two or more links where the A side and/or B side can be different.\nCreating a link with only A specified will create an edge interface.",
            "properties": {
              "links": {
                "description": "Define the set of physical links making up this TopoLink.",
                "items": {
                  "properties": {
                    "local": {
                      "description": "Local, or \"A\" endpoint of the link.",
                      "properties": {
                        "interface": {
                          "description": "Normalized name of the interface/port, e.g. ethernet-1-1.",
                          "title": "Interface",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300
                          }
                        },
                        "interfaceResource": {
                          "description": "Reference to a Interface.",
                          "title": "Interface Resource",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "interfaces.eda.nokia.com",
                                "resource": "interfaces",
                                "type": "gvr",
                                "version": "v1alpha1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 200
                          }
                        },
                        "node": {
                          "description": "Reference to a TopoNode.",
                          "title": "Node",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "core.eda.nokia.com",
                                "resource": "toponodes",
                                "type": "gvr",
                                "version": "v1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 100
                          }
                        }
                      },
                      "required": [
                        "interfaceResource",
                        "node"
                      ],
                      "title": "A",
                      "type": "object"
                    },
                    "remote": {
                      "description": "Remote, or \"B\" endpoint of the link.",
                      "properties": {
                        "interface": {
                          "description": "Normalized name of the interface/port, e.g. ethernet-1-1.",
                          "title": "Interface",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300
                          }
                        },
                        "interfaceResource": {
                          "description": "Reference to a Interface.",
                          "title": "Interface Resource",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "interfaces.eda.nokia.com",
                                "resource": "interfaces",
                                "type": "gvr",
                                "version": "v1alpha1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 200
                          }
                        },
                        "node": {
                          "description": "Reference to a TopoNode.",
                          "title": "Node",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "core.eda.nokia.com",
                                "resource": "toponodes",
                                "type": "gvr",
                                "version": "v1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 100
                          }
                        }
                      },
                      "required": [
                        "interfaceResource",
                        "node"
                      ],
                      "title": "B",
                      "type": "object"
                    },
                    "speed": {
                      "description": "Speed of the link.",
                      "enum": [
                        "800G",
                        "400G",
                        "200G",
                        "100G",
                        "50G",
                        "40G",
                        "25G",
                        "10G",
                        "2.5G",
                        "1G",
                        "100M"
                      ],
                      "title": "Speed",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "SpeedType"
                      }
                    },
                    "type": {
                      "description": "Specify the type of link.\nIf type is set to edge, topology information for the remote device can be set; when doing so the Remote Node can be set as the hostname of the remote device and Remote Interface as the remote interface name in the device specific format, e.g. eth0.",
                      "enum": [
                        "edge",
                        "interSwitch",
                        "loopback"
                      ],
                      "title": "Type",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "SpeedType"
                      }
                    }
                  },
                  "required": [
                    "local",
                    "type"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "title": "Links",
                "type": "array"
              }
            },
            "required": [
              "links"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "TopoLinkStatus defines the observed state of TopoLink",
            "properties": {
              "members": {
                "description": "List of members present on the TopoLink.",
                "items": {
                  "description": "MemberStatus defines the state of each member of a TopoLink",
                  "properties": {
                    "interface": {
                      "description": "Reference to an Interface",
                      "title": "Interface",
                      "type": "string"
                    },
                    "node": {
                      "description": "Reference to a TopoNode",
                      "title": "Node",
                      "type": "string"
                    },
                    "operationalState": {
                      "description": "Indicates the operational state of the TopoLink member.",
                      "title": "Operational State",
                      "type": "string"
                    }
                  },
                  "required": [
                    "node",
                    "operationalState"
                  ],
                  "type": "object"
                },
                "title": "Members",
                "type": "array"
              },
              "operationalState": {
                "description": "Indicates the aggregate operational state of the TopoLink.",
                "title": "Operational State",
                "type": "string"
              }
            },
            "readOnly": true,
            "required": [
              "operationalState"
            ],
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoLinkList": {
        "description": "TopoLinkList is a list of topolinks",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoLink_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoLink_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.TopoLink_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "TopoLink",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.TopoNode": {
        "description": "TopoNode is the Schema for the toponodes API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "TopoNode",
            "pattern": "^TopoNode$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to TopoNode",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode_metadata"
          },
          "spec": {
            "description": "A managed network element is represented via a TopoNode resource, describing characteristics of a specific element in the topology.",
            "properties": {
              "component": {
                "description": "List of components within the TopoNode.\nUsed to define the type and location of linecards, fabrics (SFM), media adapter cards (MDA) and control cards (CPM).",
                "items": {
                  "properties": {
                    "kind": {
                      "description": "The kind of Component, e.g. lineCard.",
                      "enum": [
                        "controlCard",
                        "lineCard",
                        "fabric",
                        "mda",
                        "connector",
                        "xiom",
                        "powerShelf",
                        "powerModule"
                      ],
                      "title": "Kind",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 1500,
                        "ui-single-line-group": "KindType"
                      }
                    },
                    "slot": {
                      "description": "The slot this Component resides in, unset for Components that do not have a slot or ID.\ne.g. 1 would denote the linecard slot 1, 1/1 would denote linecard slot 1 mda slot 1.",
                      "title": "Slot",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 1700
                      }
                    },
                    "type": {
                      "description": "Denotes the type of hardware being provisioned, e.g. xcm-x20.",
                      "title": "Type",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 1600,
                        "ui-single-line-group": "KindType"
                      }
                    }
                  },
                  "required": [
                    "kind",
                    "type"
                  ],
                  "type": "object"
                },
                "title": "Components",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1200
                }
              },
              "license": {
                "description": "Reference to a ConfigMap containing a license for the TopoNode. Overrides the license set in the referenced NodeProfile, if present.",
                "title": "License",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1000
                }
              },
              "macAddress": {
                "description": "MAC address to associate with this TopoNode.\nTypically the chassis MAC address, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX.",
                "format": "macAddr",
                "title": "MAC Address",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "MacAddressSerialNumber"
                }
              },
              "nodeProfile": {
                "description": "Reference to a NodeProfile to use with this TopoNode.",
                "title": "Node Profile",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "nodeprofiles",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "NodeProfileProdAddress"
                }
              },
              "npp": {
                "description": "Options relating to NPP interactions with the node.",
                "properties": {
                  "mode": {
                    "default": "normal",
                    "description": "The mode in which this TopoNode is functioning.\n\"normal\" (the default)\n   indicates that NPP is expecting an endpoint to exist, and will accept and confirm changes only if the endpoint\n   accepts them.\n\"maintenance\"\n   indicates that no changes will be accepted for the TopoNode, irrespective if the endpoint is up and reachable.\n   The exception is if an upgrade is occuring, in which case changes will be accepted.\n\"null\"\n\t  indicates that changes will be accepted from CRs and no NPP will be spun up. NPP validation will not occur.\n   This may be useful in playground mode to avoid spinning up of 1000s of NPPs.\n\"emulate\"\n   indicates that changes will be accepted at the NPP level, without pushing them to a endpoint. NPP validation\n   still occurs.  If no IP address is present, we also run in emulate mode.",
                    "enum": [
                      "normal",
                      "maintenance",
                      "null",
                      "emulate"
                    ],
                    "title": "Mode",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  }
                },
                "title": "NPP",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1100
                }
              },
              "onBoarded": {
                "default": false,
                "description": "Indicates if this TopoNode has been bootstrapped or is reachable via configured credentials. Set by BootstrapServer when it completes onboarding functions for a given TopoNode.\nMost applications ignore TopoNodes that have not been onboarded yet.",
                "title": "Onboarded",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "OperatingSystemOnboarded"
                }
              },
              "operatingSystem": {
                "default": "srl",
                "description": "Operating system running on this TopoNode, e.g. srl.",
                "enum": [
                  "srl",
                  "sros",
                  "eos",
                  "sonic",
                  "ios-xr",
                  "nxos",
                  "linux"
                ],
                "title": "Operating System",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "OperatingSystemOnboarded"
                }
              },
              "platform": {
                "description": "Platform type of this TopoNode, e.g. 7220 IXR-D3L.",
                "title": "Platform",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "PlatformVersion"
                }
              },
              "productionAddress": {
                "description": "Production address of this TopoNode - this is the address the real, production instance of this TopoNode uses.\nIf left blank, an address will be allocated from the management IP pool specified in the referenced NodeProfile.\nIf this TopoNode is not bootstrapped by EDA this field must be provided.",
                "format": "ip",
                "properties": {
                  "ipv4": {
                    "description": "The IPv4 production address",
                    "format": "ip",
                    "title": "IPv4",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "ProdAddress"
                    }
                  },
                  "ipv6": {
                    "description": "The IPv6 production address",
                    "format": "ip",
                    "title": "IPv6",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "ProdAddress"
                    }
                  }
                },
                "title": "Production Address",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "SystemInterfaceProdAddress"
                }
              },
              "serialNumber": {
                "description": "Serial number of this TopoNode, optionally sent by a node in DHCP requests.\nNot required when a TopoNode is not being bootstrapped by EDA, or is simulated through CX.",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "MacAddressSerialNumber"
                }
              },
              "systemInterface": {
                "description": "Deprecated: Name of the Interface resource representing the primary loopback on the TopoNode, this field will be removed in the future version.",
                "title": "System Interface",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "interfaces.eda.nokia.com",
                      "resource": "interfaces",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "SystemInterfaceProdAddress"
                }
              },
              "version": {
                "description": "Sets the software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros).",
                "title": "Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "query": ".namespace.resources.cr.core_eda_nokia_com.v1.nodeprofile fields [ spec.version as autocomplete ]",
                      "type": "query"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "PlatformVersion"
                }
              }
            },
            "required": [
              "nodeProfile",
              "operatingSystem",
              "platform",
              "version"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "TopoNodeStatus defines the observed state of TopoNode",
            "properties": {
              "node-details": {
                "description": "Address and port used to connected to the node.",
                "title": "Node Address",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2300,
                  "ui-single-line-group": "Node"
                }
              },
              "node-state": {
                "description": "The current state of the connection between NPP and the node.\n\"TryingToConnect\"\n   NPP is attempting to connect and establish connectivity to the node\n\"WaitingForInitialCfg\"\n   NPP is connected to the node but waiting for intial config to push\n\"Committing\"\n\t  NPP is in progress of commiting\n\"RetryingCommit\"\n   NPP lost sync to node and is re-pushing current config\n\"Synced\"\n   NPP is in fully synced state\n\"Standby\"\n   NPP is running in standby mode. This state is only used on standby clusters with georedundancy.\n\"NoIpAddress\"\n   NPP is running but there is no IP address for node. This only happen in sim setups when\n   CX has not created the simulated node, or the simulated pod failed to launch due to image error.",
                "title": "Node",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2200,
                  "ui-single-line-group": "Node"
                }
              },
              "npp-details": {
                "description": "NPP address and port for this TopoNode.",
                "title": "NPP Address",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2100,
                  "ui-single-line-group": "NPP"
                }
              },
              "npp-pod": {
                "description": "NPP pod name",
                "title": "NPP Pod",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2080,
                  "ui-single-line-group": "NPP"
                }
              },
              "npp-state": {
                "description": "The current state of the connection between ConfigEngine and NPP.",
                "title": "NPP",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2000,
                  "ui-single-line-group": "NPP"
                }
              },
              "operatingSystem": {
                "description": "Operational operating system running on this TopoNode, e.g. srl, sros.",
                "title": "Operating System",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2400,
                  "ui-single-line-group": "OperatingSystemVersion"
                }
              },
              "platform": {
                "description": "Operational platform type of this TopoNode, e.g. 7220 IXR-D3L.",
                "title": "Platform",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2600
                }
              },
              "simulate": {
                "description": "Simulate using CX - if true CX is reponsible for generating the TargetNode resource.",
                "title": "Simulate",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 2700
                }
              },
              "version": {
                "description": "Operational software version of this TopoNode, e.g. 24.7.1 (for srl), or 24.7.r1 (for sros).",
                "title": "Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2500,
                  "ui-single-line-group": "OperatingSystemVersion"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoNodeList": {
        "description": "TopoNodeList is a list of toponodes",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoNode_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.TopoNode_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.TopoNode_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "TopoNode",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.UdpProxy": {
        "description": "UdpProxy is the Schema for the udpproxies API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "UdpProxy",
            "pattern": "^UdpProxy$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to UdpProxy",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy_metadata"
          },
          "spec": {
            "description": "UdpProxySpec defines the desired state of UdpProxy",
            "properties": {
              "bufferSize": {
                "description": "The proxy will use a buffer of this size for all datagrams it receives and this must be sized\nto accommodate the largest datagrams expected",
                "maximum": 65535,
                "minimum": 64,
                "title": "Buffer Size",
                "type": "integer"
              },
              "destHost": {
                "description": "The destination hostname or IP address to forward the datagrams to",
                "title": "Destination Host",
                "type": "string"
              },
              "destPort": {
                "description": "The destination UDP port to forward the datagrams to",
                "maximum": 65535,
                "minimum": 1,
                "title": "Destination Port",
                "type": "integer"
              },
              "idleTimeout": {
                "description": "The proxy will listen for responses from the destination and forward it back to the source\nof the datagram until there is no traffic at all for at least the idle timeout in seconds",
                "minimum": 1,
                "title": "Idle Timeout",
                "type": "integer"
              },
              "proxyPort": {
                "description": "The UDP port on which to listen for datagrams and then proxy to the destination",
                "maximum": 65535,
                "minimum": 1,
                "title": "Proxy Port",
                "type": "integer"
              }
            },
            "required": [
              "bufferSize",
              "destHost",
              "destPort",
              "idleTimeout",
              "proxyPort"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "UdpProxyStatus defines the observed state of UdpProxy",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-visible-if": "false"
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.UdpProxyList": {
        "description": "UdpProxyList is a list of udpproxies",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.UdpProxy_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.UdpProxy_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.UdpProxy_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "UdpProxy",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.Workflow": {
        "description": "Workflow is the Schema for the workflows API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Workflow",
            "pattern": "^Workflow$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Workflow",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.Workflow_metadata"
          },
          "spec": {
            "description": "WorkflowSpec defines the desired state of Flow",
            "properties": {
              "input": {
                "description": "Input to this flow, adhering to the JSON schema defined in the referenced WorkflowDefinition.",
                "format": "json",
                "title": "Input",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "type": {
                "description": "Select the WorkflowDefinition to execute.",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "type"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "WorkflowStatus defines the observed state of Flow",
            "properties": {
              "output": {
                "description": "Output from this flow, adhering to the JSON schema defined in the referenced FlowDefinition",
                "format": "json",
                "title": "Output",
                "type": "object"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.WorkflowDefinition": {
        "description": "WorkflowDefinition is the Schema for the workflowdefinitions API",
        "properties": {
          "apiVersion": {
            "default": "core.eda.nokia.com/v1",
            "pattern": "^core\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to core.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "WorkflowDefinition",
            "pattern": "^WorkflowDefinition$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to WorkflowDefinition",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition_metadata"
          },
          "spec": {
            "description": "WorkflowDefinitionSpec defines the desired state of FlowDefinition",
            "properties": {
              "flowDefinitionResource": {
                "description": "the resource type to be used for this flow, can only be set if Schema is not set",
                "properties": {
                  "group": {
                    "title": "Group",
                    "type": "string"
                  },
                  "kind": {
                    "title": "Kind",
                    "type": "string"
                  },
                  "version": {
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "version"
                ],
                "type": "object"
              },
              "flowDefinitionSchema": {
                "description": "the schema for the flow, can only be set if Resource is not set",
                "properties": {
                  "jsonSchemaSpec": {
                    "description": "A string containing the JSON schema the workflow accepts as input.",
                    "format": "json",
                    "title": "JSON Schema (Spec)",
                    "type": "string"
                  },
                  "jsonSchemaStatus": {
                    "description": "A string containing the JSON schema the workflow will populate as output.",
                    "format": "json",
                    "title": "JSON Schema (Status)",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "image": {
                "description": "Container image containing the flow. For example \"ghcr.io/nokia-eda/apps/operatingsystem:v1.0.0\".",
                "title": "Image",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "ImageInfo",
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "ImageInfo"
                }
              },
              "imagePullSecrets": {
                "description": "Secrets to use to pull the image for this workflow.",
                "items": {
                  "type": "string"
                },
                "title": "Image Pull Secrets",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-category": "ImageInfo",
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "ImageInfo"
                }
              },
              "namespaced": {
                "default": true,
                "description": "If set, resources of this CRD are namespace scoped",
                "title": "Namespaced",
                "type": "boolean"
              }
            },
            "required": [
              "image"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "WorkflowDefinitionStatus defines the observed state of FlowDefinition",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.WorkflowDefinitionList": {
        "description": "WorkflowDefinitionList is a list of workflowdefinitions",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.WorkflowDefinition_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.core.v1.WorkflowDefinition_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.core.v1.WorkflowDefinition_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "WorkflowDefinition",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.core.v1.WorkflowList": {
        "description": "WorkflowList is a list of workflows",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.core.v1.Workflow"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.core.v1.Workflow_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "core.eda.nokia.com",
                  "kind": "Workflow",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Core Application APIs.",
    "version": "v1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/core.eda.nokia.com": {
      "get": {
        "description": "list versions available from core.eda.nokia.com",
        "operationId": "getVersionCoreEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1": {
      "get": {
        "description": "list resources available from core.eda.nokia.com/v1",
        "operationId": "getResourcesCoreEdaNokiaComV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for core.eda.nokia.com v1",
        "operationId": "uiCoreEdaNokiaComV1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/clusterroles": {
      "delete": {
        "description": "Delete all instances of ClusterRole.  If ClusterRole is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterRole, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRoleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRoleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterroles",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterRole",
        "operationId": "createCoreEdaNokiaComV1Clusterroles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/clusterroles/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterRole that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/clusterroles/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterRole",
        "operationId": "deleteCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "name of the ClusterRole to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterRole.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "name of the ClusterRole",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterRole",
        "operationId": "patchCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterRole",
        "operationId": "replaceCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.ClusterRole"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/clusterroles/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "name of the ClusterRole to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterRole.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/clusterroles/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Clusterroles",
        "parameters": [
          {
            "description": "name of the ClusterRole to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterRole.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/deviationactions": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Deviationactions",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationActionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list deviationactions",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/deviations": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Deviations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list deviations",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/edgeinterfaces": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Edgeinterfaces",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterfaceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list edgeinterfaces",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/httpproxies": {
      "delete": {
        "description": "Delete all instances of HttpProxy.  If HttpProxy is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced HttpProxy, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list httpproxies",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced HttpProxy",
        "operationId": "createCoreEdaNokiaComV1Httpproxies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/httpproxies/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of HttpProxy that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/httpproxies/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced HttpProxy",
        "operationId": "deleteCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "name of the HttpProxy to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced HttpProxy.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "name of the HttpProxy",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced HttpProxy",
        "operationId": "patchCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced HttpProxy",
        "operationId": "replaceCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.HttpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/httpproxies/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "name of the HttpProxy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced HttpProxy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/httpproxies/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Httpproxies",
        "parameters": [
          {
            "description": "name of the HttpProxy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced HttpProxy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/indexallocationpools": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Indexallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list indexallocationpools",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/ipallocationpools": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Ipallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list ipallocationpools",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/ipinsubnetallocationpools": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Ipinsubnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list ipinsubnetallocationpools",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/licenses": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Licenses",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.LicenseList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list licenses",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/licenses/{name}": {
      "get": {
        "description": "read the specified non-namespaced License.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Licenses",
        "parameters": [
          {
            "description": "name of the License",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.License"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/licenses/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Licenses",
        "parameters": [
          {
            "description": "name of the License to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced License.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/licenses/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Licenses",
        "parameters": [
          {
            "description": "name of the License to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced License.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces": {
      "delete": {
        "description": "Delete all instances of Namespace.  If Namespace is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced Namespace, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NamespaceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NamespaceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list namespaces",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced Namespace",
        "operationId": "createCoreEdaNokiaComV1Namespaces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Namespace that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviationactions": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationActionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of DeviationAction in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationActionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list deviationactions in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a DeviationAction",
        "operationId": "createCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviationactions/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of DeviationAction that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviationactions/{name}": {
      "delete": {
        "description": "delete the specified DeviationAction",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the DeviationAction to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified DeviationAction.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "name of the DeviationAction",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a DeviationAction",
        "operationId": "patchCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a DeviationAction",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationAction"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviationactions/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "name of the DeviationAction to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced DeviationAction.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviationactions/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceDeviationactions",
        "parameters": [
          {
            "description": "name of the DeviationAction to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced DeviationAction.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviations": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceDeviations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.DeviationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list deviations in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviations/{name}": {
      "get": {
        "description": "read the specified Deviation.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceDeviations",
        "parameters": [
          {
            "description": "name of the Deviation",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Deviation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviations/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceDeviations",
        "parameters": [
          {
            "description": "name of the Deviation to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Deviation.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/deviations/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceDeviations",
        "parameters": [
          {
            "description": "name of the Deviation to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Deviation.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/edgeinterfaces": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterfaceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of EdgeInterface in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterfaceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list edgeinterfaces in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a EdgeInterface",
        "operationId": "createCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/edgeinterfaces/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of EdgeInterface that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/edgeinterfaces/{name}": {
      "delete": {
        "description": "delete the specified EdgeInterface",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the EdgeInterface to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified EdgeInterface.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "name of the EdgeInterface",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a EdgeInterface",
        "operationId": "patchCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a EdgeInterface",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.EdgeInterface"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/edgeinterfaces/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "name of the EdgeInterface to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced EdgeInterface.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/edgeinterfaces/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceEdgeinterfaces",
        "parameters": [
          {
            "description": "name of the EdgeInterface to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced EdgeInterface.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/indexallocationpools": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of IndexAllocationPool in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list indexallocationpools in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a IndexAllocationPool",
        "operationId": "createCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/indexallocationpools/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of IndexAllocationPool that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/indexallocationpools/{name}": {
      "delete": {
        "description": "delete the specified IndexAllocationPool",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the IndexAllocationPool to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified IndexAllocationPool.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "name of the IndexAllocationPool",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a IndexAllocationPool",
        "operationId": "patchCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a IndexAllocationPool",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IndexAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/indexallocationpools/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "name of the IndexAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced IndexAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/indexallocationpools/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceIndexallocationpools",
        "parameters": [
          {
            "description": "name of the IndexAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced IndexAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipallocationpools": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of IPAllocationPool in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list ipallocationpools in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a IPAllocationPool",
        "operationId": "createCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipallocationpools/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of IPAllocationPool that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipallocationpools/{name}": {
      "delete": {
        "description": "delete the specified IPAllocationPool",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the IPAllocationPool to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified IPAllocationPool.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "name of the IPAllocationPool",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a IPAllocationPool",
        "operationId": "patchCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a IPAllocationPool",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipallocationpools/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "name of the IPAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced IPAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipallocationpools/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceIpallocationpools",
        "parameters": [
          {
            "description": "name of the IPAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced IPAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipinsubnetallocationpools": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of IPInSubnetAllocationPool in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list ipinsubnetallocationpools in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a IPInSubnetAllocationPool",
        "operationId": "createCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipinsubnetallocationpools/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of IPInSubnetAllocationPool that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipinsubnetallocationpools/{name}": {
      "delete": {
        "description": "delete the specified IPInSubnetAllocationPool",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the IPInSubnetAllocationPool to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified IPInSubnetAllocationPool.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "name of the IPInSubnetAllocationPool",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a IPInSubnetAllocationPool",
        "operationId": "patchCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a IPInSubnetAllocationPool",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.IPInSubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipinsubnetallocationpools/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "name of the IPInSubnetAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced IPInSubnetAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/ipinsubnetallocationpools/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceIpinsubnetallocationpools",
        "parameters": [
          {
            "description": "name of the IPInSubnetAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced IPInSubnetAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeprofiles": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfileList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of NodeProfile in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfileList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list nodeprofiles in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a NodeProfile",
        "operationId": "createCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeprofiles/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of NodeProfile that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeprofiles/{name}": {
      "delete": {
        "description": "delete the specified NodeProfile",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the NodeProfile to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified NodeProfile.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "name of the NodeProfile",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a NodeProfile",
        "operationId": "patchCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a NodeProfile",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfile"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeprofiles/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "name of the NodeProfile to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced NodeProfile.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeprofiles/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceNodeprofiles",
        "parameters": [
          {
            "description": "name of the NodeProfile to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced NodeProfile.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeusers": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUserList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of NodeUser in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUserList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list nodeusers in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a NodeUser",
        "operationId": "createCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeusers/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of NodeUser that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeusers/{name}": {
      "delete": {
        "description": "delete the specified NodeUser",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the NodeUser to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified NodeUser.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "name of the NodeUser",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a NodeUser",
        "operationId": "patchCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a NodeUser",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUser"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeusers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "name of the NodeUser to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced NodeUser.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/nodeusers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceNodeusers",
        "parameters": [
          {
            "description": "name of the NodeUser to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced NodeUser.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/roles": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.RoleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Role in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.RoleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list roles in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Role",
        "operationId": "createCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/roles/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Role that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/roles/{name}": {
      "delete": {
        "description": "delete the specified Role",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Role to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Role.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "name of the Role",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Role",
        "operationId": "patchCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Role",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Role"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/roles/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "name of the Role to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Role.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/roles/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceRoles",
        "parameters": [
          {
            "description": "name of the Role to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Role.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/subnetallocationpools": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of SubnetAllocationPool in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list subnetallocationpools in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a SubnetAllocationPool",
        "operationId": "createCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/subnetallocationpools/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of SubnetAllocationPool that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/subnetallocationpools/{name}": {
      "delete": {
        "description": "delete the specified SubnetAllocationPool",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the SubnetAllocationPool to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified SubnetAllocationPool.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "name of the SubnetAllocationPool",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a SubnetAllocationPool",
        "operationId": "patchCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a SubnetAllocationPool",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPool"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/subnetallocationpools/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "name of the SubnetAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced SubnetAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/subnetallocationpools/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceSubnetallocationpools",
        "parameters": [
          {
            "description": "name of the SubnetAllocationPool to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced SubnetAllocationPool.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topobreakouts": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakoutList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of TopoBreakout in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakoutList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list topobreakouts in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a TopoBreakout",
        "operationId": "createCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topobreakouts/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of TopoBreakout that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topobreakouts/{name}": {
      "delete": {
        "description": "delete the specified TopoBreakout",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the TopoBreakout to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified TopoBreakout.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "name of the TopoBreakout",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a TopoBreakout",
        "operationId": "patchCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a TopoBreakout",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakout"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topobreakouts/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "name of the TopoBreakout to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced TopoBreakout.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topobreakouts/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceTopobreakouts",
        "parameters": [
          {
            "description": "name of the TopoBreakout to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced TopoBreakout.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topolinks": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLinkList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of TopoLink in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLinkList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list topolinks in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a TopoLink",
        "operationId": "createCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topolinks/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of TopoLink that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topolinks/{name}": {
      "delete": {
        "description": "delete the specified TopoLink",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the TopoLink to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified TopoLink.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "name of the TopoLink",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a TopoLink",
        "operationId": "patchCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a TopoLink",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLink"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topolinks/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "name of the TopoLink to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced TopoLink.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/topolinks/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceTopolinks",
        "parameters": [
          {
            "description": "name of the TopoLink to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced TopoLink.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/toponodes": {
      "delete": {
        "operationId": "deleteAllCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNodeList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of TopoNode in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNodeList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list toponodes in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a TopoNode",
        "operationId": "createCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/toponodes/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of TopoNode that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/toponodes/{name}": {
      "delete": {
        "description": "delete the specified TopoNode",
        "operationId": "deleteCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the TopoNode to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified TopoNode.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "name of the TopoNode",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a TopoNode",
        "operationId": "patchCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a TopoNode",
        "operationId": "replaceCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/toponodes/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "name of the TopoNode to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced TopoNode.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{namespace}/toponodes/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1NamespaceToponodes",
        "parameters": [
          {
            "description": "name of the TopoNode to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced TopoNode.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced Namespace",
        "operationId": "deleteCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "name of the Namespace to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced Namespace.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "name of the Namespace",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced Namespace",
        "operationId": "patchCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced Namespace",
        "operationId": "replaceCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Namespace"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "name of the Namespace to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced Namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/namespaces/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Namespaces",
        "parameters": [
          {
            "description": "name of the Namespace to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced Namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/nodeprofiles": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Nodeprofiles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeProfileList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list nodeprofiles",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/nodeusers": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Nodeusers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.NodeUserList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list nodeusers",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/roles": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Roles",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.RoleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list roles",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/subnetallocationpools": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Subnetallocationpools",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.SubnetAllocationPoolList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list subnetallocationpools",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/topobreakouts": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Topobreakouts",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoBreakoutList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list topobreakouts",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/topolinks": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Topolinks",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoLinkList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list topolinks",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/toponodes": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Toponodes",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.TopoNodeList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list toponodes",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/udpproxies": {
      "delete": {
        "description": "Delete all instances of UdpProxy.  If UdpProxy is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced UdpProxy, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list udpproxies",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced UdpProxy",
        "operationId": "createCoreEdaNokiaComV1Udpproxies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/udpproxies/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of UdpProxy that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/udpproxies/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced UdpProxy",
        "operationId": "deleteCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "name of the UdpProxy to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced UdpProxy.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "name of the UdpProxy",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced UdpProxy",
        "operationId": "patchCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced UdpProxy",
        "operationId": "replaceCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.UdpProxy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/udpproxies/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "name of the UdpProxy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced UdpProxy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/udpproxies/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Udpproxies",
        "parameters": [
          {
            "description": "name of the UdpProxy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced UdpProxy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/workflowdefinitions": {
      "delete": {
        "description": "Delete all instances of WorkflowDefinition.  If WorkflowDefinition is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced WorkflowDefinition, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinitionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinitionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list workflowdefinitions",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced WorkflowDefinition",
        "operationId": "createCoreEdaNokiaComV1Workflowdefinitions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/workflowdefinitions/_deleted": {
      "get": {
        "operationId": "getDeletedCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of WorkflowDefinition that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/workflowdefinitions/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced WorkflowDefinition",
        "operationId": "deleteCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "name of the WorkflowDefinition to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced WorkflowDefinition.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "name of the WorkflowDefinition",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced WorkflowDefinition",
        "operationId": "patchCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced WorkflowDefinition",
        "operationId": "replaceCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/workflowdefinitions/{name}/_revs": {
      "get": {
        "operationId": "getHistoryCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "name of the WorkflowDefinition to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced WorkflowDefinition.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/core.eda.nokia.com/v1/workflowdefinitions/{name}/_topology": {
      "get": {
        "operationId": "getTopologyCoreEdaNokiaComV1Workflowdefinitions",
        "parameters": [
          {
            "description": "name of the WorkflowDefinition to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced WorkflowDefinition.",
        "tags": [
          "apps"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows": {
      "get": {
        "operationId": "wfListCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowList"
                }
              }
            },
            "description": "com.nokia.eda.core.v1.WorkflowList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all Workflow instances in this namespace.",
        "tags": [
          "workflows"
        ]
      },
      "post": {
        "description": "create a Workflow",
        "operationId": "wfCreateCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "the namespace scope in which to create the Workflow",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.core.v1.Workflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowId"
                }
              }
            },
            "description": "The response for a successful POST workflows request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows/{name}": {
      "delete": {
        "operationId": "wfDeleteCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no data is returned for this response type."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete a Workflow workflow.",
        "tags": [
          "workflows"
        ]
      },
      "get": {
        "operationId": "wfReadCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.Workflow"
                }
              }
            },
            "description": "com.nokia.eda.core.v1.Workflow"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read the specified Workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows/{name}/_artifacts": {
      "get": {
        "operationId": "wfListArtifactsCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The response for a successful list artifacts request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read list of artifacts generated by a Workflow workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows/{name}/_artifacts/{artifact}": {
      "get": {
        "operationId": "wfReadArtifactCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the artifact to download",
            "in": "path",
            "name": "artifact",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The binary content of the requested artifact."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read artifact generated by a Workflow workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows/{name}/_input": {
      "get": {
        "operationId": "wfListInputCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkflowGetInputsRespElem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List containing specifications for this flow \u0026 subflow's requested input."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get inputs requested by the Workflow.",
        "tags": [
          "workflows"
        ]
      },
      "put": {
        "operationId": "wfSubmitInputCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowInputData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": ""
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Submit input requested by the Workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/namespaces/{namespace}/workflows/{name}/_logs": {
      "get": {
        "operationId": "wfReadLogsCoreEdaNokiaComV1NamespaceWorkflows",
        "parameters": [
          {
            "description": "name of the Workflow",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The response for a successful GET logs request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read logs output by the Workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/core.eda.nokia.com/v1/workflows": {
      "get": {
        "operationId": "wfListCoreEdaNokiaComV1Workflows",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.core.v1.WorkflowList"
                }
              }
            },
            "description": "com.nokia.eda.core.v1.WorkflowList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all Workflow instances.",
        "tags": [
          "workflows"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}